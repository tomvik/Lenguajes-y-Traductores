
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ByRef ByVal and as bool bool_value close_braces close_brackets close_parenthesis colon comma dim division do dunkelCls dunkelPrint dunkelRead else elsif end end_if equals exit exponent false float float_value for function gosub goto greater_or_equal_than greater_than id if is_equal is_not_equal less_or_equal_than less_than let loop multiplication next not open_braces open_brackets open_parenthesis or procedure return semicolon step string sub substraction sum then to true until wend while word word_value\n        program : inside_logic end\n        program : inside_logic end subroutines\n        \n        inside_logic : variable inside_logic\n        inside_logic : conditions inside_logic\n        inside_logic : loops inside_logic\n        inside_logic : calls inside_logic\n        inside_logic : read_or_write inside_logic\n        inside_logic : assign inside_logic\n        |\n        \n        variable : dim id as variable_type\n        variable : dim id as variable_type open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets\n        \n        variable_type : word\n        variable_type : float\n        variable_type : bool\n        \n        base_if : if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        conditions : base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        \n        else_ifs : elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        else_ifs : else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        loops : while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO\n        loops : do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE \n        loops : for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO\n        \n        logic_expression : arithmetic_expression        \n        logic_expression : logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET\n        logic_expression : open_parenthesis logic_expression close_parenthesis\n        \n        logic_operator : and ACTION_ADD_OPERATOR\n        logic_operator : or ACTION_ADD_OPERATOR\n        logic_operator : is_equal ACTION_ADD_OPERATOR\n        logic_operator : is_not_equal ACTION_ADD_OPERATOR\n        logic_operator : greater_than ACTION_ADD_OPERATOR\n        logic_operator : greater_or_equal_than ACTION_ADD_OPERATOR\n        logic_operator : less_than ACTION_ADD_OPERATOR\n        logic_operator : less_or_equal_than ACTION_ADD_OPERATOR\n        \n        arithmetic_expression : value\n        arithmetic_expression : arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET\n        arithmetic_expression : open_parenthesis arithmetic_expression close_parenthesis\n        \n        arithmetic_operator : sum ACTION_ADD_OPERATOR\n        arithmetic_operator : substraction ACTION_ADD_OPERATOR\n        arithmetic_operator : multiplication ACTION_ADD_OPERATOR\n        arithmetic_operator : division ACTION_ADD_OPERATOR\n        arithmetic_operator : exponent ACTION_ADD_OPERATOR\n        \n        possible_values : real_value\n        possible_values : functions\n        possible_values : ids_access\n        \n        value : possible_values\n        value : not possible_values ACTION_ADD_NOT_OPERAND\n        value : open_parenthesis value close_parenthesis\n        \n        ids_access : id ACTION_ADD_VAR_VALUE\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND\n        ids_access : open_parenthesis ids_access close_parenthesis\n        \n        real_value : word_value ACTION_ADD_WORD_VALUE\n        real_value : float_value ACTION_ADD_FLOAT_VALUE\n        real_value : bool_value ACTION_ADD_BOOL_VALUE\n        real_value : id ACTION_ADD_VAR_VALUE\n        \n        calls : gosub id ACTION_ADD_SUBROUTINE_CALL\n        calls : functions\n        \n        subroutines : sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines \n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        |\n        \n        assign : let ids_access equals logic_expression ACTION_ASSIGN_VALUE\n        assign : let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE\n        \n        parameters : variable\n        parameters : parameters comma parameters\n        \n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis\n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis\n        \n        arguments : ByVal value ACTION_ADD_FUNCTION_OPERAND\n        arguments : ByRef id ACTION_ADD_FUNCTION_OPERAND\n        arguments : arguments comma arguments\n        \n        read_or_write : print\n        read_or_write : read\n        read_or_write : dunkelCls\n        \n        print : dunkelPrint multiple_print ACTION_CONSOLE_WRITE\n        print : dunkelPrint open_parenthesis multiple_print close_parenthesis ACTION_CONSOLE_WRITE\n        \n        multiple_print : string\n        multiple_print : arithmetic_expression\n        multiple_print : multiple_print comma multiple_print\n        \n        read : dunkelRead possible_read ACTION_CONSOLE_READ\n        \n        possible_read : string comma multiple_read\n        possible_read : multiple_read\n        \n        multiple_read : ids_access \n        multiple_read : multiple_read comma ids_access\n        \n        ACTION_ADD_FOR_VALUE :\n        \n        ACTION_ADD_VAR_VALUE :\n        \n        ACTION_ADD_WORD_VALUE :\n        \n        ACTION_ADD_FLOAT_VALUE :\n        \n        ACTION_ADD_BOOL_VALUE :\n        \n        ACTION_ADD_OPERATOR :\n        \n        ACTION_ADD_FUNCTION_OPERAND :\n        \n        ACTION_ADD_FUNCTION_CALL :\n        \n        ACTION_ADD_SUBROUTINE_CALL :\n        \n        ACTION_ADD_FUNCTION :\n        \n        ACTION_ADD_PROCEDURE :\n        \n        ACTION_ADD_END_FUNCTION :\n        \n        ACTION_ASSIGN_VALUE : \n        \n        ACTION_ADD_PARAMETERS :\n        \n        ACTION_ADD_NOT_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET :\n        \n        ACTION_ADD_ONE_DIM_OPERAND :\n        \n        ACTION_ADD_TWO_DIM_OPERAND :\n        \n        ACTION_ADD_THREE_DIM_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_NEW_IF :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_END_IF  :\n        \n        ACTION_FILL_JUMP :\n        \n        ACTION_FILL_JUMP_END_IF :\n        \n        ACTION_FOR_JUMP_BACK :\n        \n        ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_FOR_INCREMENT :\n        \n        ACTION_FOR_GOTO :\n        \n        ACTION_WHILE_GOTO :\n        \n        ACTION_DO_WHILE_INDEX :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE :\n        \n        ACTION_CONSOLE_WRITE :\n        \n        ACTION_CONSOLE_READ :\n        '
    
_lr_action_items = {'end':([0,2,3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,33,34,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,136,137,139,140,142,143,144,146,153,154,155,163,165,166,169,170,171,183,184,186,187,192,196,200,201,205,208,209,210,213,214,218,220,224,226,227,228,229,233,235,238,239,240,241,243,246,247,250,251,252,255,257,259,261,267,270,275,277,286,287,],[-9,24,-9,-9,-9,-9,-9,-9,-114,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,67,-114,69,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-9,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,164,-115,-9,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,197,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-9,-21,-9,-113,-24,-122,245,-9,-9,-113,-17,-25,-108,-9,258,-12,-113,-22,-54,265,-9,-23,274,-109,-13,-55,-119,-26,]),'dim':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,207,208,209,210,214,218,220,224,226,228,229,235,236,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[9,9,9,9,9,9,9,-121,-62,-78,-79,-80,-114,9,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,9,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,9,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,9,-69,-70,-82,-39,9,-74,-115,9,-28,-107,9,-11,-19,-115,-120,-53,9,-21,9,-24,-122,9,9,9,-25,-108,9,-12,-54,9,-118,-109,-13,9,-55,-119,-26,]),'while':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[13,13,13,13,13,13,13,-121,-62,-78,-79,-80,-114,13,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,13,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,13,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,13,-69,-70,-82,-39,13,-74,-115,13,-28,-107,-11,-19,-115,-120,-53,13,-21,13,-24,-122,13,13,-25,-108,13,-12,-54,13,-118,-109,-13,13,-55,-119,-26,]),'do':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[14,14,14,14,14,14,14,-121,-62,-78,-79,-80,-114,14,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,14,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,14,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,14,-69,-70,-82,-39,14,-74,-115,14,-28,-107,-11,-19,-115,-120,-53,14,-21,14,-24,-122,14,14,-25,-108,14,-12,-54,14,-118,-109,-13,14,-55,-119,-26,]),'for':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[15,15,15,15,15,15,15,-121,-62,-78,-79,-80,-114,15,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,15,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,15,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,15,-69,-70,-82,-39,15,-74,-115,15,-28,-107,-11,-19,-115,-120,-53,15,-21,15,-24,-122,15,15,-25,-108,15,-12,-54,15,-118,-109,-13,15,-55,-119,-26,]),'gosub':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[16,16,16,16,16,16,16,-121,-62,-78,-79,-80,-114,16,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,16,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,16,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,16,-69,-70,-82,-39,16,-74,-115,16,-28,-107,-11,-19,-115,-120,-53,16,-21,16,-24,-122,16,16,-25,-108,16,-12,-54,16,-118,-109,-13,16,-55,-119,-26,]),'dunkelCls':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[20,20,20,20,20,20,20,-121,-62,-78,-79,-80,-114,20,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,20,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,20,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,20,-69,-70,-82,-39,20,-74,-115,20,-28,-107,-11,-19,-115,-120,-53,20,-21,20,-24,-122,20,20,-25,-108,20,-12,-54,20,-118,-109,-13,20,-55,-119,-26,]),'let':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[21,21,21,21,21,21,21,-121,-62,-78,-79,-80,-114,21,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,21,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,21,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,21,-69,-70,-82,-39,21,-74,-115,21,-28,-107,-11,-19,-115,-120,-53,21,-21,21,-24,-122,21,21,-25,-108,21,-12,-54,21,-118,-109,-13,21,-55,-119,-26,]),'if':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,67,68,69,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,164,165,169,170,171,180,183,184,186,187,189,192,196,197,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[12,12,12,12,12,12,12,-121,-62,-78,-79,-80,-114,12,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,115,12,117,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,12,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,196,-20,-29,-110,-106,12,-69,-70,-82,-39,12,-74,-115,210,12,-28,-107,-11,-19,-115,-120,-53,12,-21,12,-24,-122,12,12,-25,-108,12,-12,-54,12,-118,-109,-13,12,-55,-119,-26,]),'id':([0,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,34,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,68,70,73,75,79,80,81,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,118,120,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,143,144,146,147,148,149,150,151,152,153,154,155,156,163,165,167,169,170,171,172,173,174,175,176,177,178,179,180,183,184,186,187,189,192,196,200,201,203,205,208,209,210,214,216,217,218,220,224,226,228,229,230,235,238,241,243,246,250,254,255,259,262,269,270,275,276,277,284,286,287,],[10,10,10,10,10,10,10,31,-121,40,41,-62,-78,-79,-80,43,58,43,-114,58,58,10,-99,-92,43,-123,90,-83,-84,-38,-49,58,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,10,-114,90,-27,-61,58,-52,-81,58,90,58,-96,-96,-96,-96,-96,-105,-57,-58,-59,-52,-86,43,43,156,157,-10,-14,-15,-16,-73,58,162,-115,-115,10,58,58,-96,-96,-96,-96,-96,-96,-96,-96,-111,58,-103,-27,58,-56,-85,-123,-40,-51,-106,90,-41,-42,-43,-44,-45,-50,-87,-90,-101,-18,-20,58,-29,-110,-106,-30,-31,-32,-33,-34,-35,-36,-37,10,-69,-70,-82,-39,10,-74,-115,10,-28,58,-107,-11,-19,-115,-120,-116,58,-53,10,-21,10,-24,-122,58,10,10,-25,-108,10,-12,58,-54,10,58,-118,-109,-13,10,-55,286,-119,-26,]),'dunkelPrint':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[22,22,22,22,22,22,22,-121,-62,-78,-79,-80,-114,22,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,22,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,22,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,22,-69,-70,-82,-39,22,-74,-115,22,-28,-107,-11,-19,-115,-120,-53,22,-21,22,-24,-122,22,22,-25,-108,22,-12,-54,22,-118,-109,-13,22,-55,-119,-26,]),'dunkelRead':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,68,70,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,118,133,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,170,171,180,183,184,186,187,189,192,196,200,201,205,208,209,210,214,218,220,224,226,228,229,235,238,241,243,246,250,255,259,269,270,275,276,277,286,287,],[23,23,23,23,23,23,23,-121,-62,-78,-79,-80,-114,23,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,23,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,23,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,23,-69,-70,-82,-39,23,-74,-115,23,-28,-107,-11,-19,-115,-120,-53,23,-21,23,-24,-122,23,23,-25,-108,23,-12,-54,23,-118,-109,-13,23,-55,-119,-26,]),'$end':([1,24,63,219,232,244,256,264,266,271,272,273,278,279,280,282,283,285,],[0,-1,-2,-102,-68,-63,-102,-68,-102,-64,-102,-68,-68,-65,-102,-66,-68,-67,]),'loop':([3,4,5,6,7,8,14,17,18,19,20,25,26,27,28,29,30,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,77,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,136,137,139,140,142,143,144,146,153,154,155,163,165,169,171,183,184,186,187,192,196,201,205,208,209,210,214,218,224,228,229,241,243,250,255,270,275,277,286,287,],[-9,-9,-9,-9,-9,-9,-121,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-9,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,134,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-69,-70,-82,-39,-74,-115,-28,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'wend':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,133,136,137,139,140,142,143,144,146,153,154,155,163,165,169,171,180,183,184,186,187,192,196,201,202,205,208,209,210,214,218,224,228,229,241,243,250,255,270,275,277,286,287,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-9,-69,-70,-82,-39,-74,-115,-28,214,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'return':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,136,137,139,140,142,143,144,146,153,154,155,156,163,165,169,171,183,184,186,187,189,192,196,201,205,206,208,209,210,214,218,224,228,229,241,243,250,255,270,275,277,286,287,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-106,-69,-70,-82,-39,-9,-74,-115,-28,-107,219,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'else':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,136,137,139,140,142,143,144,146,153,154,155,163,165,169,170,171,183,184,186,187,192,196,200,201,205,208,209,210,213,214,218,224,226,227,228,229,238,239,240,241,243,250,251,252,255,261,270,275,277,286,287,],[-9,-9,-9,-9,-9,-9,34,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,70,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-21,-9,-113,-24,-122,-9,-113,-17,-25,-108,-12,-113,-22,-54,-23,-109,-13,-55,-119,-26,]),'elsif':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,136,137,139,140,142,143,144,146,153,154,155,163,165,169,170,171,183,184,186,187,192,196,200,201,205,208,209,210,213,214,218,224,226,227,228,229,238,239,240,241,243,250,251,252,255,261,270,275,277,286,287,],[-9,-9,-9,-9,-9,-9,36,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,71,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-21,-9,-113,-24,-122,-9,-113,-17,-25,-108,-12,-113,-22,-54,-23,-109,-13,-55,-119,-26,]),'next':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,62,75,79,81,83,97,98,99,100,101,102,107,108,109,110,111,115,117,136,137,139,140,142,143,144,146,153,154,155,163,165,169,171,183,184,186,187,192,196,201,205,208,209,210,214,218,224,228,229,241,243,250,255,269,270,275,276,277,281,286,287,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-99,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-69,-70,-82,-39,-74,-115,-28,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-118,-109,-13,-9,-55,284,-119,-26,]),'open_parenthesis':([10,12,13,21,22,23,32,36,37,38,44,46,51,58,71,72,73,80,84,85,90,91,92,93,94,95,96,103,104,113,119,120,124,125,126,127,128,129,130,131,132,135,138,147,148,149,150,151,152,157,167,172,173,174,175,176,177,178,179,181,190,203,216,217,230,254,262,],[-98,37,38,44,46,44,66,-114,73,73,44,85,44,-98,-114,120,73,73,85,85,-98,147,-96,-96,-96,-96,-96,44,44,147,167,73,73,-96,-96,-96,-96,-96,-96,-96,-96,85,85,147,-41,-42,-43,-44,-45,-100,73,-30,-31,-32,-33,-34,-35,-36,-37,203,207,73,-116,85,85,85,85,]),'string':([22,23,46,84,],[47,60,47,47,]),'not':([22,37,38,46,73,80,84,85,91,92,93,94,95,96,113,120,124,125,126,127,128,129,130,131,132,135,138,147,148,149,150,151,152,167,172,173,174,175,176,177,178,179,203,216,217,230,254,262,],[51,51,51,51,51,51,51,51,51,-96,-96,-96,-96,-96,51,51,51,-96,-96,-96,-96,-96,-96,-96,-96,51,51,51,-41,-42,-43,-44,-45,51,-30,-31,-32,-33,-34,-35,-36,-37,51,-116,51,51,51,51,]),'word_value':([22,37,38,46,51,73,80,84,85,91,92,93,94,95,96,113,120,124,125,126,127,128,129,130,131,132,135,138,147,148,149,150,151,152,158,167,172,173,174,175,176,177,178,179,203,216,217,223,230,254,260,262,],[55,55,55,55,55,55,55,55,55,55,-96,-96,-96,-96,-96,55,55,55,-96,-96,-96,-96,-96,-96,-96,-96,55,55,55,-41,-42,-43,-44,-45,191,55,-30,-31,-32,-33,-34,-35,-36,-37,55,-116,55,237,55,55,268,55,]),'float_value':([22,37,38,46,51,73,80,84,85,91,92,93,94,95,96,113,120,124,125,126,127,128,129,130,131,132,135,138,147,148,149,150,151,152,167,172,173,174,175,176,177,178,179,203,216,217,230,254,262,],[56,56,56,56,56,56,56,56,56,56,-96,-96,-96,-96,-96,56,56,56,-96,-96,-96,-96,-96,-96,-96,-96,56,56,56,-41,-42,-43,-44,-45,56,-30,-31,-32,-33,-34,-35,-36,-37,56,-116,56,56,56,56,]),'bool_value':([22,37,38,46,51,73,80,84,85,91,92,93,94,95,96,113,120,124,125,126,127,128,129,130,131,132,135,138,147,148,149,150,151,152,167,172,173,174,175,176,177,178,179,203,216,217,230,254,262,],[57,57,57,57,57,57,57,57,57,57,-96,-96,-96,-96,-96,57,57,57,-96,-96,-96,-96,-96,-96,-96,-96,57,57,57,-41,-42,-43,-44,-45,57,-30,-31,-32,-33,-34,-35,-36,-37,57,-116,57,57,57,57,]),'sub':([24,219,232,245,256,258,264,265,266,272,273,274,278,280,283,],[64,-102,64,256,-102,266,64,272,-102,-102,64,280,64,-102,64,]),'as':([31,220,235,],[65,234,248,]),'equals':([40,42,43,78,81,139,205,218,243,255,270,277,],[-91,80,-92,135,-52,-56,-107,-53,-108,-54,-109,-55,]),'open_brackets':([43,58,81,90,101,107,108,109,110,145,205,208,243,250,],[-92,-92,138,-92,138,158,-14,-15,-16,138,217,223,254,260,]),'comma':([43,45,47,48,49,50,52,53,54,55,56,57,58,60,61,62,81,86,87,88,89,90,97,98,99,100,101,107,108,109,110,111,112,139,140,143,144,145,146,153,154,155,161,162,187,192,193,194,195,205,208,218,221,222,243,249,250,255,270,275,277,],[-92,84,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,103,104,-89,-52,84,-84,-38,-48,-92,-105,-57,-58,-59,-52,-10,-14,-15,-16,-73,160,-56,84,-40,-51,-52,-106,-50,104,-90,-97,-97,-39,-74,160,-75,-76,-107,-11,-53,236,-71,-108,236,-12,-54,-109,-13,-55,]),'close_parenthesis':([43,47,48,49,50,52,53,54,55,56,57,58,66,74,75,76,81,82,86,87,88,89,90,97,98,99,100,101,107,108,109,110,111,112,121,122,139,140,141,143,144,145,146,153,159,161,162,168,169,171,187,188,192,193,194,195,198,201,205,207,208,215,218,221,222,243,249,250,255,270,275,277,],[-92,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,111,123,-27,133,-52,139,142,143,144,139,-92,-105,-57,-58,-59,-52,-10,-14,-15,-16,-73,-104,169,143,-56,-85,143,-40,-51,-52,-106,-50,192,-97,-97,199,-29,-106,-39,144,-74,-77,-75,-76,211,-28,-107,220,-11,229,-53,235,-71,-108,-72,-12,-54,-109,-13,-55,]),'sum':([48,49,50,52,53,54,55,56,57,58,75,87,88,89,90,97,98,99,100,101,111,122,137,139,141,143,144,145,146,153,182,185,187,192,205,218,231,242,243,255,263,269,270,277,],[92,-38,-49,-46,-47,-48,-93,-94,-95,-92,92,92,-38,-48,-92,-105,-57,-58,-59,-52,-73,92,92,-56,92,-40,-51,-52,-106,-50,92,92,-39,-74,-107,-53,92,92,-108,-54,92,92,-109,-55,]),'substraction':([48,49,50,52,53,54,55,56,57,58,75,87,88,89,90,97,98,99,100,101,111,122,137,139,141,143,144,145,146,153,182,185,187,192,205,218,231,242,243,255,263,269,270,277,],[93,-38,-49,-46,-47,-48,-93,-94,-95,-92,93,93,-38,-48,-92,-105,-57,-58,-59,-52,-73,93,93,-56,93,-40,-51,-52,-106,-50,93,93,-39,-74,-107,-53,93,93,-108,-54,93,93,-109,-55,]),'multiplication':([48,49,50,52,53,54,55,56,57,58,75,87,88,89,90,97,98,99,100,101,111,122,137,139,141,143,144,145,146,153,182,185,187,192,205,218,231,242,243,255,263,269,270,277,],[94,-38,-49,-46,-47,-48,-93,-94,-95,-92,94,94,-38,-48,-92,-105,-57,-58,-59,-52,-73,94,94,-56,94,-40,-51,-52,-106,-50,94,94,-39,-74,-107,-53,94,94,-108,-54,94,94,-109,-55,]),'division':([48,49,50,52,53,54,55,56,57,58,75,87,88,89,90,97,98,99,100,101,111,122,137,139,141,143,144,145,146,153,182,185,187,192,205,218,231,242,243,255,263,269,270,277,],[95,-38,-49,-46,-47,-48,-93,-94,-95,-92,95,95,-38,-48,-92,-105,-57,-58,-59,-52,-73,95,95,-56,95,-40,-51,-52,-106,-50,95,95,-39,-74,-107,-53,95,95,-108,-54,95,95,-109,-55,]),'exponent':([48,49,50,52,53,54,55,56,57,58,75,87,88,89,90,97,98,99,100,101,111,122,137,139,141,143,144,145,146,153,182,185,187,192,205,218,231,242,243,255,263,269,270,277,],[96,-38,-49,-46,-47,-48,-93,-94,-95,-92,96,96,-38,-48,-92,-105,-57,-58,-59,-52,-73,96,96,-56,96,-40,-51,-52,-106,-50,96,96,-39,-74,-107,-53,96,96,-108,-54,96,96,-109,-55,]),'and':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,125,-27,125,-38,-48,-92,-105,-57,-58,-59,-52,-73,125,-27,125,-27,-56,-40,-51,-52,-106,-50,125,-29,125,-39,-74,125,-28,-107,125,-53,-108,-54,-109,-55,]),'or':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,126,-27,126,-38,-48,-92,-105,-57,-58,-59,-52,-73,126,-27,126,-27,-56,-40,-51,-52,-106,-50,126,-29,126,-39,-74,126,-28,-107,126,-53,-108,-54,-109,-55,]),'is_equal':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,127,-27,127,-38,-48,-92,-105,-57,-58,-59,-52,-73,127,-27,127,-27,-56,-40,-51,-52,-106,-50,127,-29,127,-39,-74,127,-28,-107,127,-53,-108,-54,-109,-55,]),'is_not_equal':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,128,-27,128,-38,-48,-92,-105,-57,-58,-59,-52,-73,128,-27,128,-27,-56,-40,-51,-52,-106,-50,128,-29,128,-39,-74,128,-28,-107,128,-53,-108,-54,-109,-55,]),'greater_than':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,129,-27,129,-38,-48,-92,-105,-57,-58,-59,-52,-73,129,-27,129,-27,-56,-40,-51,-52,-106,-50,129,-29,129,-39,-74,129,-28,-107,129,-53,-108,-54,-109,-55,]),'greater_or_equal_than':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,130,-27,130,-38,-48,-92,-105,-57,-58,-59,-52,-73,130,-27,130,-27,-56,-40,-51,-52,-106,-50,130,-29,130,-39,-74,130,-28,-107,130,-53,-108,-54,-109,-55,]),'less_than':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,131,-27,131,-38,-48,-92,-105,-57,-58,-59,-52,-73,131,-27,131,-27,-56,-40,-51,-52,-106,-50,131,-29,131,-39,-74,131,-28,-107,131,-53,-108,-54,-109,-55,]),'less_or_equal_than':([49,50,52,53,54,55,56,57,58,74,75,76,88,89,90,97,98,99,100,101,111,121,122,136,137,139,143,144,145,146,153,168,169,171,187,192,198,201,205,215,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,132,-27,132,-38,-48,-92,-105,-57,-58,-59,-52,-73,132,-27,132,-27,-56,-40,-51,-52,-106,-50,132,-29,132,-39,-74,132,-28,-107,132,-53,-108,-54,-109,-55,]),'to':([49,50,52,53,54,55,56,57,58,97,98,99,100,101,111,139,143,144,146,153,182,187,192,204,205,218,243,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,-103,-39,-74,216,-107,-53,-108,-54,-109,-55,]),'close_brackets':([49,50,52,53,54,55,56,57,58,97,98,99,100,101,111,139,143,144,146,153,185,187,191,192,205,218,231,237,243,255,263,268,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,205,-39,208,-74,-107,-53,243,250,-108,-54,270,275,-109,-55,]),'step':([49,50,52,53,54,55,56,57,58,97,98,99,100,101,111,139,143,144,146,153,187,192,205,218,242,243,253,255,270,277,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,-39,-74,-107,-53,-117,-108,262,-54,-109,-55,]),'procedure':([64,],[105,]),'function':([64,],[106,]),'word':([65,234,248,],[108,108,108,]),'float':([65,234,248,],[109,109,109,]),'bool':([65,234,248,],[110,110,110,]),'ByVal':([66,160,],[113,113,]),'ByRef':([66,160,],[114,114,]),'then':([123,199,211,212,225,],[170,-110,-110,226,238,]),'until':([134,],[181,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'inside_logic':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[2,25,26,27,28,29,30,77,116,166,202,206,213,233,239,247,251,257,267,281,]),'variable':([0,3,4,5,6,7,8,39,68,118,180,189,200,207,220,226,235,236,238,246,259,276,],[3,3,3,3,3,3,3,3,3,3,3,3,3,222,3,3,3,222,3,3,3,3,]),'conditions':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loops':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'calls':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'read_or_write':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assign':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'base_if':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'functions':([0,3,4,5,6,7,8,22,37,38,39,46,51,68,73,80,84,85,91,113,118,120,124,135,138,147,167,180,189,200,203,217,220,226,230,235,238,246,254,259,262,276,],[17,17,17,17,17,17,17,53,53,53,17,53,53,17,53,53,53,53,53,53,17,53,53,53,53,53,53,17,17,17,53,53,17,17,53,17,17,17,53,17,53,17,]),'print':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'read':([0,3,4,5,6,7,8,39,68,118,180,189,200,220,226,235,238,246,259,276,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ACTION_ADD_FUNCTION_CALL':([10,58,90,],[32,32,32,]),'ACTION_FILL_JUMP':([11,34,36,70,71,],[33,68,72,118,119,]),'else_ifs':([11,],[35,]),'ACTION_DO_WHILE_INDEX':([14,],[39,]),'ids_access':([21,22,23,37,38,44,46,51,73,80,84,85,91,103,104,113,120,124,135,138,147,167,203,217,230,254,262,],[42,54,62,54,54,82,89,54,89,54,54,89,54,62,155,54,54,54,54,54,89,54,54,54,54,54,54,]),'multiple_print':([22,46,84,],[45,86,140,]),'arithmetic_expression':([22,37,38,46,73,80,84,85,120,124,135,138,167,203,217,230,254,262,],[48,75,75,87,122,137,48,141,75,75,182,185,75,75,231,242,263,269,]),'value':([22,37,38,46,73,80,84,85,91,113,120,124,135,138,147,167,203,217,230,254,262,],[49,49,49,88,88,49,49,88,146,161,49,49,49,49,188,49,49,49,49,49,49,]),'possible_values':([22,37,38,46,51,73,80,84,85,91,113,120,124,135,138,147,167,203,217,230,254,262,],[50,50,50,50,97,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'real_value':([22,37,38,46,51,73,80,84,85,91,113,120,124,135,138,147,167,203,217,230,254,262,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'possible_read':([23,],[59,]),'multiple_read':([23,103,],[61,154,]),'subroutines':([24,232,264,273,278,283,],[63,244,271,279,282,285,]),'logic_expression':([37,38,73,80,120,124,167,203,],[74,76,121,136,168,171,198,215,]),'ACTION_ADD_FOR_VALUE':([40,],[78,]),'ACTION_ADD_SUBROUTINE_CALL':([41,],[79,]),'ACTION_ADD_VAR_VALUE':([43,58,90,],[81,101,145,]),'ACTION_CONSOLE_WRITE':([45,142,],[83,186,]),'arithmetic_operator':([48,75,87,122,137,141,182,185,231,242,263,269,],[91,91,91,91,91,91,91,91,91,91,91,91,]),'ACTION_ADD_WORD_VALUE':([55,],[98,]),'ACTION_ADD_FLOAT_VALUE':([56,],[99,]),'ACTION_ADD_BOOL_VALUE':([57,],[100,]),'ACTION_CONSOLE_READ':([59,],[102,]),'variable_type':([65,234,248,],[107,246,259,]),'arguments':([66,160,],[112,193,]),'logic_operator':([74,76,121,136,168,171,198,215,],[124,124,124,124,124,124,124,124,]),'ACTION_ADD_OPERATOR':([92,93,94,95,96,125,126,127,128,129,130,131,132,],[148,149,150,151,152,172,173,174,175,176,177,178,179,]),'ACTION_ADD_NOT_OPERAND':([97,],[153,]),'ACTION_ADD_PARAMETERS':([112,],[159,]),'ACTION_FILL_JUMP_END_IF':([115,117,196,210,],[163,165,209,224,]),'ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP':([133,],[180,]),'ACTION_ASSIGN_VALUE':([136,137,182,],[183,184,204,]),'ACTION_ADD_QUADRUPLET':([146,171,],[187,201,]),'ACTION_ADD_PROCEDURE':([156,],[189,]),'ACTION_ADD_FUNCTION':([157,],[190,]),'ACTION_ADD_FUNCTION_OPERAND':([161,162,],[194,195,]),'ACTION_ADD_QUADRUPLET_EMPTY_JUMP':([170,199,211,],[200,212,225,]),'ACTION_ADD_ONE_DIM_OPERAND':([205,],[218,]),'parameters':([207,236,],[221,249,]),'ACTION_NEW_IF':([213,],[227,]),'ACTION_WHILE_GOTO':([214,],[228,]),'ACTION_FOR_JUMP_BACK':([216,],[230,]),'ACTION_ADD_END_FUNCTION':([219,256,266,272,280,],[232,264,273,278,283,]),'ACTION_QUADRUPLET_EMPTY_JUMP_END_IF':([227,239,251,],[240,252,261,]),'ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE':([229,],[241,]),'ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP':([242,],[253,]),'ACTION_ADD_TWO_DIM_OPERAND':([243,],[255,]),'ACTION_FOR_INCREMENT':([269,],[276,]),'ACTION_ADD_THREE_DIM_OPERAND':([270,],[277,]),'ACTION_FOR_GOTO':([286,],[287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> inside_logic end','program',2,'p_program','Parser.py',106),
  ('program -> inside_logic end subroutines','program',3,'p_program','Parser.py',107),
  ('inside_logic -> variable inside_logic','inside_logic',2,'p_inside_logic','Parser.py',115),
  ('inside_logic -> conditions inside_logic','inside_logic',2,'p_inside_logic','Parser.py',116),
  ('inside_logic -> loops inside_logic','inside_logic',2,'p_inside_logic','Parser.py',117),
  ('inside_logic -> calls inside_logic','inside_logic',2,'p_inside_logic','Parser.py',118),
  ('inside_logic -> read_or_write inside_logic','inside_logic',2,'p_inside_logic','Parser.py',119),
  ('inside_logic -> assign inside_logic','inside_logic',2,'p_inside_logic','Parser.py',120),
  ('inside_logic -> <empty>','inside_logic',0,'p_inside_logic','Parser.py',121),
  ('variable -> dim id as variable_type','variable',4,'p_variable','Parser.py',126),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets','variable',7,'p_variable','Parser.py',127),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',10,'p_variable','Parser.py',128),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',13,'p_variable','Parser.py',129),
  ('variable_type -> word','variable_type',1,'p_variable_type','Parser.py',153),
  ('variable_type -> float','variable_type',1,'p_variable_type','Parser.py',154),
  ('variable_type -> bool','variable_type',1,'p_variable_type','Parser.py',155),
  ('base_if -> if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','base_if',9,'p_base_if','Parser.py',161),
  ('conditions -> base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',166),
  ('conditions -> base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',7,'p_conditions','Parser.py',167),
  ('conditions -> base_if else_ifs end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',168),
  ('conditions -> base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',8,'p_conditions','Parser.py',169),
  ('else_ifs -> elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',9,'p_else_ifs','Parser.py',174),
  ('else_ifs -> else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',10,'p_else_ifs','Parser.py',175),
  ('loops -> while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO','loops',8,'p_loops','Parser.py',180),
  ('loops -> do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE','loops',9,'p_loops','Parser.py',181),
  ('loops -> for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO','loops',17,'p_loops','Parser.py',182),
  ('logic_expression -> arithmetic_expression','logic_expression',1,'p_logic_expression','Parser.py',187),
  ('logic_expression -> logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET','logic_expression',4,'p_logic_expression','Parser.py',188),
  ('logic_expression -> open_parenthesis logic_expression close_parenthesis','logic_expression',3,'p_logic_expression','Parser.py',189),
  ('logic_operator -> and ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',194),
  ('logic_operator -> or ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',195),
  ('logic_operator -> is_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',196),
  ('logic_operator -> is_not_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',197),
  ('logic_operator -> greater_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',198),
  ('logic_operator -> greater_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',199),
  ('logic_operator -> less_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',200),
  ('logic_operator -> less_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',201),
  ('arithmetic_expression -> value','arithmetic_expression',1,'p_arithmetic_expression','Parser.py',206),
  ('arithmetic_expression -> arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET','arithmetic_expression',4,'p_arithmetic_expression','Parser.py',207),
  ('arithmetic_expression -> open_parenthesis arithmetic_expression close_parenthesis','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',208),
  ('arithmetic_operator -> sum ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',213),
  ('arithmetic_operator -> substraction ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',214),
  ('arithmetic_operator -> multiplication ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',215),
  ('arithmetic_operator -> division ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',216),
  ('arithmetic_operator -> exponent ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',217),
  ('possible_values -> real_value','possible_values',1,'p_possible_values','Parser.py',222),
  ('possible_values -> functions','possible_values',1,'p_possible_values','Parser.py',223),
  ('possible_values -> ids_access','possible_values',1,'p_possible_values','Parser.py',224),
  ('value -> possible_values','value',1,'p_value','Parser.py',229),
  ('value -> not possible_values ACTION_ADD_NOT_OPERAND','value',3,'p_value','Parser.py',230),
  ('value -> open_parenthesis value close_parenthesis','value',3,'p_value','Parser.py',231),
  ('ids_access -> id ACTION_ADD_VAR_VALUE','ids_access',2,'p_ids_access','Parser.py',236),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND','ids_access',6,'p_ids_access','Parser.py',237),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND','ids_access',9,'p_ids_access','Parser.py',238),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND','ids_access',12,'p_ids_access','Parser.py',239),
  ('ids_access -> open_parenthesis ids_access close_parenthesis','ids_access',3,'p_ids_access','Parser.py',240),
  ('real_value -> word_value ACTION_ADD_WORD_VALUE','real_value',2,'p_real_value','Parser.py',245),
  ('real_value -> float_value ACTION_ADD_FLOAT_VALUE','real_value',2,'p_real_value','Parser.py',246),
  ('real_value -> bool_value ACTION_ADD_BOOL_VALUE','real_value',2,'p_real_value','Parser.py',247),
  ('real_value -> id ACTION_ADD_VAR_VALUE','real_value',2,'p_real_value','Parser.py',248),
  ('calls -> gosub id ACTION_ADD_SUBROUTINE_CALL','calls',3,'p_calls','Parser.py',253),
  ('calls -> functions','calls',1,'p_calls','Parser.py',254),
  ('subroutines -> sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines','subroutines',8,'p_subroutines','Parser.py',259),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',11,'p_subroutines','Parser.py',260),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',12,'p_subroutines','Parser.py',261),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',13,'p_subroutines','Parser.py',262),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',14,'p_subroutines','Parser.py',263),
  ('subroutines -> <empty>','subroutines',0,'p_subroutines','Parser.py',264),
  ('assign -> let ids_access equals logic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',278),
  ('assign -> let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',279),
  ('parameters -> variable','parameters',1,'p_parameters','Parser.py',284),
  ('parameters -> parameters comma parameters','parameters',3,'p_parameters','Parser.py',285),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis','functions',4,'p_functions','Parser.py',290),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis','functions',6,'p_functions','Parser.py',291),
  ('arguments -> ByVal value ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',296),
  ('arguments -> ByRef id ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',297),
  ('arguments -> arguments comma arguments','arguments',3,'p_arguments','Parser.py',298),
  ('read_or_write -> print','read_or_write',1,'p_read_or_write','Parser.py',303),
  ('read_or_write -> read','read_or_write',1,'p_read_or_write','Parser.py',304),
  ('read_or_write -> dunkelCls','read_or_write',1,'p_read_or_write','Parser.py',305),
  ('print -> dunkelPrint multiple_print ACTION_CONSOLE_WRITE','print',3,'p_print','Parser.py',310),
  ('print -> dunkelPrint open_parenthesis multiple_print close_parenthesis ACTION_CONSOLE_WRITE','print',5,'p_print','Parser.py',311),
  ('multiple_print -> string','multiple_print',1,'p_multiple_print','Parser.py',316),
  ('multiple_print -> arithmetic_expression','multiple_print',1,'p_multiple_print','Parser.py',317),
  ('multiple_print -> multiple_print comma multiple_print','multiple_print',3,'p_multiple_print','Parser.py',318),
  ('read -> dunkelRead possible_read ACTION_CONSOLE_READ','read',3,'p_read','Parser.py',328),
  ('possible_read -> string comma multiple_read','possible_read',3,'p_possible_read','Parser.py',337),
  ('possible_read -> multiple_read','possible_read',1,'p_possible_read','Parser.py',338),
  ('multiple_read -> ids_access','multiple_read',1,'p_multiple_read','Parser.py',349),
  ('multiple_read -> multiple_read comma ids_access','multiple_read',3,'p_multiple_read','Parser.py',350),
  ('ACTION_ADD_FOR_VALUE -> <empty>','ACTION_ADD_FOR_VALUE',0,'p_action_add_for_value','Parser.py',361),
  ('ACTION_ADD_VAR_VALUE -> <empty>','ACTION_ADD_VAR_VALUE',0,'p_action_add_var_value','Parser.py',374),
  ('ACTION_ADD_WORD_VALUE -> <empty>','ACTION_ADD_WORD_VALUE',0,'p_action_add_word_value','Parser.py',382),
  ('ACTION_ADD_FLOAT_VALUE -> <empty>','ACTION_ADD_FLOAT_VALUE',0,'p_action_add_float_value','Parser.py',388),
  ('ACTION_ADD_BOOL_VALUE -> <empty>','ACTION_ADD_BOOL_VALUE',0,'p_action_add_bool_value','Parser.py',394),
  ('ACTION_ADD_OPERATOR -> <empty>','ACTION_ADD_OPERATOR',0,'p_action_add_operator','Parser.py',400),
  ('ACTION_ADD_FUNCTION_OPERAND -> <empty>','ACTION_ADD_FUNCTION_OPERAND',0,'p_action_add_function_operand','Parser.py',406),
  ('ACTION_ADD_FUNCTION_CALL -> <empty>','ACTION_ADD_FUNCTION_CALL',0,'p_action_add_function_call','Parser.py',414),
  ('ACTION_ADD_SUBROUTINE_CALL -> <empty>','ACTION_ADD_SUBROUTINE_CALL',0,'p_action_add_subroutine_call','Parser.py',423),
  ('ACTION_ADD_FUNCTION -> <empty>','ACTION_ADD_FUNCTION',0,'p_action_add_function','Parser.py',432),
  ('ACTION_ADD_PROCEDURE -> <empty>','ACTION_ADD_PROCEDURE',0,'p_action_add_procedure','Parser.py',441),
  ('ACTION_ADD_END_FUNCTION -> <empty>','ACTION_ADD_END_FUNCTION',0,'p_action_add_end_function','Parser.py',450),
  ('ACTION_ASSIGN_VALUE -> <empty>','ACTION_ASSIGN_VALUE',0,'p_action_assign_value','Parser.py',458),
  ('ACTION_ADD_PARAMETERS -> <empty>','ACTION_ADD_PARAMETERS',0,'p_action_add_parameters','Parser.py',469),
  ('ACTION_ADD_NOT_OPERAND -> <empty>','ACTION_ADD_NOT_OPERAND',0,'p_action_add_not_operand','Parser.py',482),
  ('ACTION_ADD_QUADRUPLET -> <empty>','ACTION_ADD_QUADRUPLET',0,'p_action_add_quadruplet','Parser.py',498),
  ('ACTION_ADD_ONE_DIM_OPERAND -> <empty>','ACTION_ADD_ONE_DIM_OPERAND',0,'p_action_add_one_dim_operand','Parser.py',518),
  ('ACTION_ADD_TWO_DIM_OPERAND -> <empty>','ACTION_ADD_TWO_DIM_OPERAND',0,'p_action_add_two_dim_operand','Parser.py',528),
  ('ACTION_ADD_THREE_DIM_OPERAND -> <empty>','ACTION_ADD_THREE_DIM_OPERAND',0,'p_action_add_three_dim_operand','Parser.py',539),
  ('ACTION_ADD_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_quadruplet_empty_jump','Parser.py',551),
  ('ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_while_quadruplet_empty_jump','Parser.py',565),
  ('ACTION_NEW_IF -> <empty>','ACTION_NEW_IF',0,'p_action_new_if','Parser.py',586),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_END_IF -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_END_IF',0,'p_action_quadruplet_empty_jump_end_if','Parser.py',593),
  ('ACTION_FILL_JUMP -> <empty>','ACTION_FILL_JUMP',0,'p_action_fill_jump','Parser.py',603),
  ('ACTION_FILL_JUMP_END_IF -> <empty>','ACTION_FILL_JUMP_END_IF',0,'p_action_fill_jump_end_if','Parser.py',612),
  ('ACTION_FOR_JUMP_BACK -> <empty>','ACTION_FOR_JUMP_BACK',0,'p_action_for_jump_back','Parser.py',623),
  ('ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_for_quadruplet_empty_jump','Parser.py',630),
  ('ACTION_FOR_INCREMENT -> <empty>','ACTION_FOR_INCREMENT',0,'p_action_for_increment','Parser.py',651),
  ('ACTION_FOR_GOTO -> <empty>','ACTION_FOR_GOTO',0,'p_action_for_goto','Parser.py',660),
  ('ACTION_WHILE_GOTO -> <empty>','ACTION_WHILE_GOTO',0,'p_action_while_goto','Parser.py',671),
  ('ACTION_DO_WHILE_INDEX -> <empty>','ACTION_DO_WHILE_INDEX',0,'p_action_do_while_jump_index','Parser.py',683),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE',0,'p_action_quadruplet_empty_jump_do_while','Parser.py',689),
  ('ACTION_CONSOLE_WRITE -> <empty>','ACTION_CONSOLE_WRITE',0,'p_action_console_write','Parser.py',699),
  ('ACTION_CONSOLE_READ -> <empty>','ACTION_CONSOLE_READ',0,'p_action_console_read','Parser.py',712),
]
