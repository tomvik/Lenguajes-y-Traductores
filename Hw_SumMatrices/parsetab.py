
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ByRef ByVal and as bool bool_value close_braces close_brackets close_parenthesis colon comma dim division do dunkelCls dunkelPrint dunkelRead else elsif end end_if equals exit exponent false float float_value for function gosub goto greater_or_equal_than greater_than id if is_equal is_not_equal less_or_equal_than less_than let loop multiplication next not open_braces open_brackets open_parenthesis or procedure return semicolon step string sub substraction sum then to true until wend while word word_value\n        program : inside_logic end\n        program : inside_logic end subroutines\n        \n        inside_logic : variable inside_logic\n        inside_logic : conditions inside_logic\n        inside_logic : loops inside_logic\n        inside_logic : calls inside_logic\n        inside_logic : read_or_write inside_logic\n        inside_logic : assign inside_logic\n        |\n        \n        variable : dim id as variable_type\n        variable : dim id as variable_type open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets\n        \n        variable_type : word\n        variable_type : float\n        variable_type : bool\n        \n        base_if : if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        conditions : base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        \n        else_ifs : elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        else_ifs : else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        loops : while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO\n        loops : do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE \n        loops : for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO\n        \n        logic_expression : arithmetic_expression        \n        logic_expression : logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET\n        logic_expression : open_parenthesis logic_expression close_parenthesis\n        \n        logic_operator : and ACTION_ADD_OPERATOR\n        logic_operator : or ACTION_ADD_OPERATOR\n        logic_operator : is_equal ACTION_ADD_OPERATOR\n        logic_operator : is_not_equal ACTION_ADD_OPERATOR\n        logic_operator : greater_than ACTION_ADD_OPERATOR\n        logic_operator : greater_or_equal_than ACTION_ADD_OPERATOR\n        logic_operator : less_than ACTION_ADD_OPERATOR\n        logic_operator : less_or_equal_than ACTION_ADD_OPERATOR\n        \n        arithmetic_expression : value\n        arithmetic_expression : arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET\n        arithmetic_expression : open_parenthesis arithmetic_expression close_parenthesis\n        \n        arithmetic_operator : sum ACTION_ADD_OPERATOR\n        arithmetic_operator : substraction ACTION_ADD_OPERATOR\n        arithmetic_operator : multiplication ACTION_ADD_OPERATOR\n        arithmetic_operator : division ACTION_ADD_OPERATOR\n        arithmetic_operator : exponent ACTION_ADD_OPERATOR\n        \n        possible_values : real_value\n        possible_values : functions\n        possible_values : ids_access\n        \n        value : possible_values\n        value : not possible_values ACTION_ADD_NOT_OPERAND\n        value : open_parenthesis value close_parenthesis\n        \n        ids_access : id ACTION_ADD_VAR_VALUE\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND\n        ids_access : open_parenthesis ids_access close_parenthesis\n        \n        real_value : word_value ACTION_ADD_WORD_VALUE\n        real_value : float_value ACTION_ADD_FLOAT_VALUE\n        real_value : bool_value ACTION_ADD_BOOL_VALUE\n        real_value : id ACTION_ADD_VAR_VALUE\n        \n        calls : gosub id ACTION_ADD_SUBROUTINE_CALL\n        calls : functions\n        \n        subroutines : sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines \n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        |\n        \n        assign : let ids_access equals logic_expression ACTION_ASSIGN_VALUE\n        assign : let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE\n        \n        parameters : variable\n        parameters : parameters comma parameters\n        \n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis\n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis\n        \n        arguments : ByVal value ACTION_ADD_FUNCTION_OPERAND\n        arguments : ByRef id ACTION_ADD_FUNCTION_OPERAND\n        arguments : arguments comma arguments\n        \n        read_or_write : print\n        read_or_write : read\n        read_or_write : dunkelCls\n        \n        print : dunkelPrint multiple_print\n        print : dunkelPrint open_parenthesis multiple_print close_parenthesis\n        \n        multiple_print : string\n        multiple_print : arithmetic_expression\n        multiple_print : multiple_print comma multiple_print\n        \n        read : dunkelRead multiple_read\n        read : dunkelRead string comma multiple_read\n        \n        multiple_read : ids_access \n        multiple_read : multiple_read comma ids_access\n        \n        ACTION_ADD_FOR_VALUE :\n        \n        ACTION_ADD_VAR_VALUE :\n        \n        ACTION_ADD_WORD_VALUE :\n        \n        ACTION_ADD_FLOAT_VALUE :\n        \n        ACTION_ADD_BOOL_VALUE :\n        \n        ACTION_ADD_OPERATOR :\n        \n        ACTION_ADD_FUNCTION_OPERAND :\n        \n        ACTION_ADD_FUNCTION_CALL :\n        \n        ACTION_ADD_SUBROUTINE_CALL :\n        \n        ACTION_ADD_FUNCTION :\n        \n        ACTION_ADD_PROCEDURE :\n        \n        ACTION_ADD_END_FUNCTION :\n        \n        ACTION_ASSIGN_VALUE : \n        \n        ACTION_ADD_PARAMETERS :\n        \n        ACTION_ADD_NOT_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET :\n        \n        ACTION_ADD_ONE_DIM_OPERAND :\n        \n        ACTION_ADD_TWO_DIM_OPERAND :\n        \n        ACTION_ADD_THREE_DIM_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_NEW_IF :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_END_IF  :\n        \n        ACTION_FILL_JUMP :\n        \n        ACTION_FILL_JUMP_END_IF :\n        \n        ACTION_FOR_JUMP_BACK :\n        \n        ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_FOR_INCREMENT :\n        \n        ACTION_FOR_GOTO :\n        \n        ACTION_WHILE_GOTO :\n        \n        ACTION_DO_WHILE_INDEX :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE :\n        '
    
_lr_action_items = {'end':([0,2,3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,33,34,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,113,114,115,133,134,136,137,139,140,141,143,150,151,152,160,162,163,166,167,168,180,181,183,188,192,196,197,201,204,205,206,209,210,214,216,220,222,223,224,225,229,231,234,235,236,237,239,242,243,246,247,248,251,253,255,257,263,266,271,273,282,283,],[-9,24,-9,-9,-9,-9,-9,-9,-113,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,66,-113,68,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-9,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,161,-114,-9,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,193,-29,-109,-105,-69,-70,-39,-74,-114,-9,-28,-106,-11,-19,-114,-111,-119,-53,-9,-21,-9,-112,-24,-121,241,-9,-9,-112,-17,-25,-107,-9,254,-12,-112,-22,-54,261,-9,-23,270,-108,-13,-55,-118,-26,]),'dim':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,203,204,205,206,210,214,216,220,222,224,225,231,232,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[9,9,9,9,9,9,9,-120,-62,-78,-79,-80,-113,9,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,9,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,9,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,9,-69,-70,-39,9,-74,-114,9,-28,-106,9,-11,-19,-114,-119,-53,9,-21,9,-24,-121,9,9,9,-25,-107,9,-12,-54,9,-117,-108,-13,9,-55,-118,-26,]),'while':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[13,13,13,13,13,13,13,-120,-62,-78,-79,-80,-113,13,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,13,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,13,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,13,-69,-70,-39,13,-74,-114,13,-28,-106,-11,-19,-114,-119,-53,13,-21,13,-24,-121,13,13,-25,-107,13,-12,-54,13,-117,-108,-13,13,-55,-118,-26,]),'do':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[14,14,14,14,14,14,14,-120,-62,-78,-79,-80,-113,14,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,14,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,14,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,14,-69,-70,-39,14,-74,-114,14,-28,-106,-11,-19,-114,-119,-53,14,-21,14,-24,-121,14,14,-25,-107,14,-12,-54,14,-117,-108,-13,14,-55,-118,-26,]),'for':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[15,15,15,15,15,15,15,-120,-62,-78,-79,-80,-113,15,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,15,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,15,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,15,-69,-70,-39,15,-74,-114,15,-28,-106,-11,-19,-114,-119,-53,15,-21,15,-24,-121,15,15,-25,-107,15,-12,-54,15,-117,-108,-13,15,-55,-118,-26,]),'gosub':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[16,16,16,16,16,16,16,-120,-62,-78,-79,-80,-113,16,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,16,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,16,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,16,-69,-70,-39,16,-74,-114,16,-28,-106,-11,-19,-114,-119,-53,16,-21,16,-24,-121,16,16,-25,-107,16,-12,-54,16,-117,-108,-13,16,-55,-118,-26,]),'dunkelCls':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[20,20,20,20,20,20,20,-120,-62,-78,-79,-80,-113,20,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,20,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,20,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,20,-69,-70,-39,20,-74,-114,20,-28,-106,-11,-19,-114,-119,-53,20,-21,20,-24,-121,20,20,-25,-107,20,-12,-54,20,-117,-108,-13,20,-55,-118,-26,]),'let':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[21,21,21,21,21,21,21,-120,-62,-78,-79,-80,-113,21,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,21,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,21,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,21,-69,-70,-39,21,-74,-114,21,-28,-106,-11,-19,-114,-119,-53,21,-21,21,-24,-121,21,21,-25,-107,21,-12,-54,21,-117,-108,-13,21,-55,-118,-26,]),'if':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,66,67,68,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,161,162,166,167,168,177,180,181,183,185,188,192,193,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[12,12,12,12,12,12,12,-120,-62,-78,-79,-80,-113,12,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,112,12,114,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,12,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,192,-20,-29,-109,-105,12,-69,-70,-39,12,-74,-114,206,12,-28,-106,-11,-19,-114,-119,-53,12,-21,12,-24,-121,12,12,-25,-107,12,-12,-54,12,-117,-108,-13,12,-55,-118,-26,]),'id':([0,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,34,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,67,69,72,74,78,79,80,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,114,115,117,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,152,153,160,162,164,166,167,168,169,170,171,172,173,174,175,176,177,180,181,183,185,188,192,196,197,199,201,204,205,206,210,212,213,214,216,220,222,224,225,226,231,234,237,239,242,246,250,251,255,258,265,266,271,272,273,280,282,283,],[10,10,10,10,10,10,10,31,-120,40,41,-62,-78,-79,-80,43,58,43,-113,58,58,10,-98,-91,43,-81,88,-83,-84,-38,-49,58,-46,-47,-48,-92,-93,-94,-91,-86,-88,10,-113,88,-27,-61,58,-52,58,88,58,-95,-95,-95,-95,-95,-104,-57,-58,-59,-52,43,43,153,154,-10,-14,-15,-16,-73,58,159,-114,-114,10,58,58,-95,-95,-95,-95,-95,-95,-95,-95,-110,58,-102,-27,58,-56,-85,-82,-40,-51,-105,88,-41,-42,-43,-44,-45,-50,-89,-87,-100,-18,-20,58,-29,-109,-105,-30,-31,-32,-33,-34,-35,-36,-37,10,-69,-70,-39,10,-74,-114,10,-28,58,-106,-11,-19,-114,-119,-115,58,-53,10,-21,10,-24,-121,58,10,10,-25,-107,10,-12,58,-54,10,58,-117,-108,-13,10,-55,282,-118,-26,]),'dunkelPrint':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[22,22,22,22,22,22,22,-120,-62,-78,-79,-80,-113,22,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,22,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,22,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,22,-69,-70,-39,22,-74,-114,22,-28,-106,-11,-19,-114,-119,-53,22,-21,22,-24,-121,22,22,-25,-107,22,-12,-54,22,-117,-108,-13,22,-55,-118,-26,]),'dunkelRead':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,67,69,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,115,130,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,167,168,177,180,181,183,185,188,192,196,197,201,204,205,206,210,214,216,220,222,224,225,231,234,237,239,242,246,251,255,265,266,271,272,273,282,283,],[23,23,23,23,23,23,23,-120,-62,-78,-79,-80,-113,23,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,23,-113,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,23,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-109,-105,23,-69,-70,-39,23,-74,-114,23,-28,-106,-11,-19,-114,-119,-53,23,-21,23,-24,-121,23,23,-25,-107,23,-12,-54,23,-117,-108,-13,23,-55,-118,-26,]),'$end':([1,24,62,215,228,240,252,260,262,267,268,269,274,275,276,278,279,281,],[0,-1,-2,-101,-68,-63,-101,-68,-101,-64,-101,-68,-68,-65,-101,-66,-68,-67,]),'loop':([3,4,5,6,7,8,14,17,18,19,20,25,26,27,28,29,30,39,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,76,78,80,95,96,97,98,99,104,105,106,107,108,112,114,133,134,136,137,139,140,141,143,150,151,152,160,162,166,168,180,181,183,188,192,197,201,204,205,206,210,214,220,224,225,237,239,246,251,266,271,273,282,283,],[-9,-9,-9,-9,-9,-9,-120,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-9,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,131,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,-29,-105,-69,-70,-39,-74,-114,-28,-106,-11,-19,-114,-119,-53,-21,-24,-121,-25,-107,-12,-54,-108,-13,-55,-118,-26,]),'wend':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,130,133,134,136,137,139,140,141,143,150,151,152,160,162,166,168,177,180,181,183,188,192,197,198,201,204,205,206,210,214,220,224,225,237,239,246,251,266,271,273,282,283,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-110,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,-29,-105,-9,-69,-70,-39,-74,-114,-28,210,-106,-11,-19,-114,-119,-53,-21,-24,-121,-25,-107,-12,-54,-108,-13,-55,-118,-26,]),'return':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,133,134,136,137,139,140,141,143,150,151,152,153,160,162,166,168,180,181,183,185,188,192,197,201,202,204,205,206,210,214,220,224,225,237,239,246,251,266,271,273,282,283,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-100,-18,-20,-29,-105,-69,-70,-39,-9,-74,-114,-28,-106,215,-11,-19,-114,-119,-53,-21,-24,-121,-25,-107,-12,-54,-108,-13,-55,-118,-26,]),'else':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,133,134,136,137,139,140,141,143,150,151,152,160,162,166,167,168,180,181,183,188,192,196,197,201,204,205,206,209,210,214,220,222,223,224,225,234,235,236,237,239,246,247,248,251,257,266,271,273,282,283,],[-9,-9,-9,-9,-9,-9,34,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,69,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,-29,-109,-105,-69,-70,-39,-74,-114,-9,-28,-106,-11,-19,-114,-111,-119,-53,-21,-9,-112,-24,-121,-9,-112,-17,-25,-107,-12,-112,-22,-54,-23,-108,-13,-55,-118,-26,]),'elsif':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,133,134,136,137,139,140,141,143,150,151,152,160,162,166,167,168,180,181,183,188,192,196,197,201,204,205,206,209,210,214,220,222,223,224,225,234,235,236,237,239,246,247,248,251,257,266,271,273,282,283,],[-9,-9,-9,-9,-9,-9,36,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,70,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,-29,-109,-105,-69,-70,-39,-74,-114,-9,-28,-106,-11,-19,-114,-111,-119,-53,-21,-9,-112,-24,-121,-9,-112,-17,-25,-107,-12,-112,-22,-54,-23,-108,-13,-55,-118,-26,]),'next':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,43,45,47,48,49,50,52,53,54,55,56,57,58,59,61,74,78,80,95,96,97,98,99,104,105,106,107,108,112,114,133,134,136,137,139,140,141,143,150,151,152,160,162,166,168,180,181,183,188,192,197,201,204,205,206,210,214,220,224,225,237,239,246,251,265,266,271,272,273,277,282,283,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-80,-3,-4,-5,-6,-7,-8,-98,-91,-81,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,-86,-88,-27,-61,-52,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-114,-114,-102,-27,-56,-85,-82,-40,-51,-105,-50,-89,-87,-18,-20,-29,-105,-69,-70,-39,-74,-114,-28,-106,-11,-19,-114,-119,-53,-21,-24,-121,-25,-107,-12,-54,-117,-108,-13,-9,-55,280,-118,-26,]),'open_parenthesis':([10,12,13,21,22,23,32,36,37,38,44,46,51,58,70,71,72,79,82,83,88,89,90,91,92,93,94,100,101,110,116,117,121,122,123,124,125,126,127,128,129,132,135,144,145,146,147,148,149,154,164,169,170,171,172,173,174,175,176,178,186,199,212,213,226,250,258,],[-97,37,38,44,46,44,65,-113,72,72,44,83,44,-97,-113,117,72,72,83,83,-97,144,-95,-95,-95,-95,-95,44,44,144,164,72,72,-95,-95,-95,-95,-95,-95,-95,-95,83,83,144,-41,-42,-43,-44,-45,-99,72,-30,-31,-32,-33,-34,-35,-36,-37,199,203,72,-115,83,83,83,83,]),'string':([22,23,46,82,],[47,60,47,47,]),'not':([22,37,38,46,72,79,82,83,89,90,91,92,93,94,110,117,121,122,123,124,125,126,127,128,129,132,135,144,145,146,147,148,149,164,169,170,171,172,173,174,175,176,199,212,213,226,250,258,],[51,51,51,51,51,51,51,51,51,-95,-95,-95,-95,-95,51,51,51,-95,-95,-95,-95,-95,-95,-95,-95,51,51,51,-41,-42,-43,-44,-45,51,-30,-31,-32,-33,-34,-35,-36,-37,51,-115,51,51,51,51,]),'word_value':([22,37,38,46,51,72,79,82,83,89,90,91,92,93,94,110,117,121,122,123,124,125,126,127,128,129,132,135,144,145,146,147,148,149,155,164,169,170,171,172,173,174,175,176,199,212,213,219,226,250,256,258,],[55,55,55,55,55,55,55,55,55,55,-95,-95,-95,-95,-95,55,55,55,-95,-95,-95,-95,-95,-95,-95,-95,55,55,55,-41,-42,-43,-44,-45,187,55,-30,-31,-32,-33,-34,-35,-36,-37,55,-115,55,233,55,55,264,55,]),'float_value':([22,37,38,46,51,72,79,82,83,89,90,91,92,93,94,110,117,121,122,123,124,125,126,127,128,129,132,135,144,145,146,147,148,149,164,169,170,171,172,173,174,175,176,199,212,213,226,250,258,],[56,56,56,56,56,56,56,56,56,56,-95,-95,-95,-95,-95,56,56,56,-95,-95,-95,-95,-95,-95,-95,-95,56,56,56,-41,-42,-43,-44,-45,56,-30,-31,-32,-33,-34,-35,-36,-37,56,-115,56,56,56,56,]),'bool_value':([22,37,38,46,51,72,79,82,83,89,90,91,92,93,94,110,117,121,122,123,124,125,126,127,128,129,132,135,144,145,146,147,148,149,164,169,170,171,172,173,174,175,176,199,212,213,226,250,258,],[57,57,57,57,57,57,57,57,57,57,-95,-95,-95,-95,-95,57,57,57,-95,-95,-95,-95,-95,-95,-95,-95,57,57,57,-41,-42,-43,-44,-45,57,-30,-31,-32,-33,-34,-35,-36,-37,57,-115,57,57,57,57,]),'sub':([24,215,228,241,252,254,260,261,262,268,269,270,274,276,279,],[63,-101,63,252,-101,262,63,268,-101,-101,63,276,63,-101,63,]),'as':([31,216,231,],[64,230,244,]),'equals':([40,42,43,77,80,136,201,214,239,251,266,273,],[-90,79,-91,132,-52,-56,-106,-53,-107,-54,-108,-55,]),'open_brackets':([43,58,80,88,99,104,105,106,107,142,201,204,239,246,],[-91,-91,135,-91,135,155,-14,-15,-16,135,213,219,250,256,]),'comma':([43,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,80,84,85,86,87,88,95,96,97,98,99,104,105,106,107,108,109,136,137,140,141,142,143,150,151,152,158,159,183,188,189,190,191,201,204,214,217,218,239,245,246,251,266,271,273,],[-91,82,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,100,101,-88,-52,82,-84,-38,-48,-91,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,157,-56,82,-40,-51,-52,-105,-50,-89,100,-96,-96,-39,-74,157,-75,-76,-106,-11,-53,232,-71,-107,232,-12,-54,-108,-13,-55,]),'close_parenthesis':([43,47,48,49,50,52,53,54,55,56,57,58,65,73,74,75,80,81,84,85,86,87,88,95,96,97,98,99,104,105,106,107,108,109,118,119,136,137,138,140,141,142,143,150,156,158,159,165,166,168,183,184,188,189,190,191,194,197,201,203,204,211,214,217,218,239,245,246,251,266,271,273,],[-91,-83,-84,-38,-49,-46,-47,-48,-92,-93,-94,-91,108,120,-27,130,-52,136,139,140,141,136,-91,-104,-57,-58,-59,-52,-10,-14,-15,-16,-73,-103,166,140,-56,-85,140,-40,-51,-52,-105,-50,188,-96,-96,195,-29,-105,-39,141,-74,-77,-75,-76,207,-28,-106,216,-11,225,-53,231,-71,-107,-72,-12,-54,-108,-13,-55,]),'sum':([48,49,50,52,53,54,55,56,57,58,74,85,86,87,88,95,96,97,98,99,108,119,134,136,138,140,141,142,143,150,179,182,183,188,201,214,227,238,239,251,259,265,266,273,],[90,-38,-49,-46,-47,-48,-92,-93,-94,-91,90,90,-38,-48,-91,-104,-57,-58,-59,-52,-73,90,90,-56,90,-40,-51,-52,-105,-50,90,90,-39,-74,-106,-53,90,90,-107,-54,90,90,-108,-55,]),'substraction':([48,49,50,52,53,54,55,56,57,58,74,85,86,87,88,95,96,97,98,99,108,119,134,136,138,140,141,142,143,150,179,182,183,188,201,214,227,238,239,251,259,265,266,273,],[91,-38,-49,-46,-47,-48,-92,-93,-94,-91,91,91,-38,-48,-91,-104,-57,-58,-59,-52,-73,91,91,-56,91,-40,-51,-52,-105,-50,91,91,-39,-74,-106,-53,91,91,-107,-54,91,91,-108,-55,]),'multiplication':([48,49,50,52,53,54,55,56,57,58,74,85,86,87,88,95,96,97,98,99,108,119,134,136,138,140,141,142,143,150,179,182,183,188,201,214,227,238,239,251,259,265,266,273,],[92,-38,-49,-46,-47,-48,-92,-93,-94,-91,92,92,-38,-48,-91,-104,-57,-58,-59,-52,-73,92,92,-56,92,-40,-51,-52,-105,-50,92,92,-39,-74,-106,-53,92,92,-107,-54,92,92,-108,-55,]),'division':([48,49,50,52,53,54,55,56,57,58,74,85,86,87,88,95,96,97,98,99,108,119,134,136,138,140,141,142,143,150,179,182,183,188,201,214,227,238,239,251,259,265,266,273,],[93,-38,-49,-46,-47,-48,-92,-93,-94,-91,93,93,-38,-48,-91,-104,-57,-58,-59,-52,-73,93,93,-56,93,-40,-51,-52,-105,-50,93,93,-39,-74,-106,-53,93,93,-107,-54,93,93,-108,-55,]),'exponent':([48,49,50,52,53,54,55,56,57,58,74,85,86,87,88,95,96,97,98,99,108,119,134,136,138,140,141,142,143,150,179,182,183,188,201,214,227,238,239,251,259,265,266,273,],[94,-38,-49,-46,-47,-48,-92,-93,-94,-91,94,94,-38,-48,-91,-104,-57,-58,-59,-52,-73,94,94,-56,94,-40,-51,-52,-105,-50,94,94,-39,-74,-106,-53,94,94,-107,-54,94,94,-108,-55,]),'and':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,122,-27,122,-38,-48,-91,-104,-57,-58,-59,-52,-73,122,-27,122,-27,-56,-40,-51,-52,-105,-50,122,-29,122,-39,-74,122,-28,-106,122,-53,-107,-54,-108,-55,]),'or':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,123,-27,123,-38,-48,-91,-104,-57,-58,-59,-52,-73,123,-27,123,-27,-56,-40,-51,-52,-105,-50,123,-29,123,-39,-74,123,-28,-106,123,-53,-107,-54,-108,-55,]),'is_equal':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,124,-27,124,-38,-48,-91,-104,-57,-58,-59,-52,-73,124,-27,124,-27,-56,-40,-51,-52,-105,-50,124,-29,124,-39,-74,124,-28,-106,124,-53,-107,-54,-108,-55,]),'is_not_equal':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,125,-27,125,-38,-48,-91,-104,-57,-58,-59,-52,-73,125,-27,125,-27,-56,-40,-51,-52,-105,-50,125,-29,125,-39,-74,125,-28,-106,125,-53,-107,-54,-108,-55,]),'greater_than':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,126,-27,126,-38,-48,-91,-104,-57,-58,-59,-52,-73,126,-27,126,-27,-56,-40,-51,-52,-105,-50,126,-29,126,-39,-74,126,-28,-106,126,-53,-107,-54,-108,-55,]),'greater_or_equal_than':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,127,-27,127,-38,-48,-91,-104,-57,-58,-59,-52,-73,127,-27,127,-27,-56,-40,-51,-52,-105,-50,127,-29,127,-39,-74,127,-28,-106,127,-53,-107,-54,-108,-55,]),'less_than':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,128,-27,128,-38,-48,-91,-104,-57,-58,-59,-52,-73,128,-27,128,-27,-56,-40,-51,-52,-105,-50,128,-29,128,-39,-74,128,-28,-106,128,-53,-107,-54,-108,-55,]),'less_or_equal_than':([49,50,52,53,54,55,56,57,58,73,74,75,86,87,88,95,96,97,98,99,108,118,119,133,134,136,140,141,142,143,150,165,166,168,183,188,194,197,201,211,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,129,-27,129,-38,-48,-91,-104,-57,-58,-59,-52,-73,129,-27,129,-27,-56,-40,-51,-52,-105,-50,129,-29,129,-39,-74,129,-28,-106,129,-53,-107,-54,-108,-55,]),'to':([49,50,52,53,54,55,56,57,58,95,96,97,98,99,108,136,140,141,143,150,179,183,188,200,201,214,239,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,-104,-57,-58,-59,-52,-73,-56,-40,-51,-105,-50,-102,-39,-74,212,-106,-53,-107,-54,-108,-55,]),'close_brackets':([49,50,52,53,54,55,56,57,58,95,96,97,98,99,108,136,140,141,143,150,182,183,187,188,201,214,227,233,239,251,259,264,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,-104,-57,-58,-59,-52,-73,-56,-40,-51,-105,-50,201,-39,204,-74,-106,-53,239,246,-107,-54,266,271,-108,-55,]),'step':([49,50,52,53,54,55,56,57,58,95,96,97,98,99,108,136,140,141,143,150,183,188,201,214,238,239,249,251,266,273,],[-38,-49,-46,-47,-48,-92,-93,-94,-91,-104,-57,-58,-59,-52,-73,-56,-40,-51,-105,-50,-39,-74,-106,-53,-116,-107,258,-54,-108,-55,]),'procedure':([63,],[102,]),'function':([63,],[103,]),'word':([64,230,244,],[105,105,105,]),'float':([64,230,244,],[106,106,106,]),'bool':([64,230,244,],[107,107,107,]),'ByVal':([65,157,],[110,110,]),'ByRef':([65,157,],[111,111,]),'then':([120,195,207,208,221,],[167,-109,-109,222,234,]),'until':([131,],[178,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'inside_logic':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[2,25,26,27,28,29,30,76,113,163,198,202,209,229,235,243,247,253,263,277,]),'variable':([0,3,4,5,6,7,8,39,67,115,177,185,196,203,216,222,231,232,234,242,255,272,],[3,3,3,3,3,3,3,3,3,3,3,3,3,218,3,3,3,218,3,3,3,3,]),'conditions':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loops':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'calls':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'read_or_write':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assign':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'base_if':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'functions':([0,3,4,5,6,7,8,22,37,38,39,46,51,67,72,79,82,83,89,110,115,117,121,132,135,144,164,177,185,196,199,213,216,222,226,231,234,242,250,255,258,272,],[17,17,17,17,17,17,17,53,53,53,17,53,53,17,53,53,53,53,53,53,17,53,53,53,53,53,53,17,17,17,53,53,17,17,53,17,17,17,53,17,53,17,]),'print':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'read':([0,3,4,5,6,7,8,39,67,115,177,185,196,216,222,231,234,242,255,272,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ACTION_ADD_FUNCTION_CALL':([10,58,88,],[32,32,32,]),'ACTION_FILL_JUMP':([11,34,36,69,70,],[33,67,71,115,116,]),'else_ifs':([11,],[35,]),'ACTION_DO_WHILE_INDEX':([14,],[39,]),'ids_access':([21,22,23,37,38,44,46,51,72,79,82,83,89,100,101,110,117,121,132,135,144,164,199,213,226,250,258,],[42,54,61,54,54,81,87,54,87,54,54,87,54,151,61,54,54,54,54,54,87,54,54,54,54,54,54,]),'multiple_print':([22,46,82,],[45,84,137,]),'arithmetic_expression':([22,37,38,46,72,79,82,83,117,121,132,135,164,199,213,226,250,258,],[48,74,74,85,119,134,48,138,74,74,179,182,74,74,227,238,259,265,]),'value':([22,37,38,46,72,79,82,83,89,110,117,121,132,135,144,164,199,213,226,250,258,],[49,49,49,86,86,49,49,86,143,158,49,49,49,49,184,49,49,49,49,49,49,]),'possible_values':([22,37,38,46,51,72,79,82,83,89,110,117,121,132,135,144,164,199,213,226,250,258,],[50,50,50,50,95,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'real_value':([22,37,38,46,51,72,79,82,83,89,110,117,121,132,135,144,164,199,213,226,250,258,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'multiple_read':([23,101,],[59,152,]),'subroutines':([24,228,260,269,274,279,],[62,240,267,275,278,281,]),'logic_expression':([37,38,72,79,117,121,164,199,],[73,75,118,133,165,168,194,211,]),'ACTION_ADD_FOR_VALUE':([40,],[77,]),'ACTION_ADD_SUBROUTINE_CALL':([41,],[78,]),'ACTION_ADD_VAR_VALUE':([43,58,88,],[80,99,142,]),'arithmetic_operator':([48,74,85,119,134,138,179,182,227,238,259,265,],[89,89,89,89,89,89,89,89,89,89,89,89,]),'ACTION_ADD_WORD_VALUE':([55,],[96,]),'ACTION_ADD_FLOAT_VALUE':([56,],[97,]),'ACTION_ADD_BOOL_VALUE':([57,],[98,]),'variable_type':([64,230,244,],[104,242,255,]),'arguments':([65,157,],[109,189,]),'logic_operator':([73,75,118,133,165,168,194,211,],[121,121,121,121,121,121,121,121,]),'ACTION_ADD_OPERATOR':([90,91,92,93,94,122,123,124,125,126,127,128,129,],[145,146,147,148,149,169,170,171,172,173,174,175,176,]),'ACTION_ADD_NOT_OPERAND':([95,],[150,]),'ACTION_ADD_PARAMETERS':([109,],[156,]),'ACTION_FILL_JUMP_END_IF':([112,114,192,206,],[160,162,205,220,]),'ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP':([130,],[177,]),'ACTION_ASSIGN_VALUE':([133,134,179,],[180,181,200,]),'ACTION_ADD_QUADRUPLET':([143,168,],[183,197,]),'ACTION_ADD_PROCEDURE':([153,],[185,]),'ACTION_ADD_FUNCTION':([154,],[186,]),'ACTION_ADD_FUNCTION_OPERAND':([158,159,],[190,191,]),'ACTION_ADD_QUADRUPLET_EMPTY_JUMP':([167,195,207,],[196,208,221,]),'ACTION_ADD_ONE_DIM_OPERAND':([201,],[214,]),'parameters':([203,232,],[217,245,]),'ACTION_NEW_IF':([209,],[223,]),'ACTION_WHILE_GOTO':([210,],[224,]),'ACTION_FOR_JUMP_BACK':([212,],[226,]),'ACTION_ADD_END_FUNCTION':([215,252,262,268,276,],[228,260,269,274,279,]),'ACTION_QUADRUPLET_EMPTY_JUMP_END_IF':([223,235,247,],[236,248,257,]),'ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE':([225,],[237,]),'ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP':([238,],[249,]),'ACTION_ADD_TWO_DIM_OPERAND':([239,],[251,]),'ACTION_FOR_INCREMENT':([265,],[272,]),'ACTION_ADD_THREE_DIM_OPERAND':([266,],[273,]),'ACTION_FOR_GOTO':([282,],[283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> inside_logic end','program',2,'p_program','Parser.py',102),
  ('program -> inside_logic end subroutines','program',3,'p_program','Parser.py',103),
  ('inside_logic -> variable inside_logic','inside_logic',2,'p_inside_logic','Parser.py',111),
  ('inside_logic -> conditions inside_logic','inside_logic',2,'p_inside_logic','Parser.py',112),
  ('inside_logic -> loops inside_logic','inside_logic',2,'p_inside_logic','Parser.py',113),
  ('inside_logic -> calls inside_logic','inside_logic',2,'p_inside_logic','Parser.py',114),
  ('inside_logic -> read_or_write inside_logic','inside_logic',2,'p_inside_logic','Parser.py',115),
  ('inside_logic -> assign inside_logic','inside_logic',2,'p_inside_logic','Parser.py',116),
  ('inside_logic -> <empty>','inside_logic',0,'p_inside_logic','Parser.py',117),
  ('variable -> dim id as variable_type','variable',4,'p_variable','Parser.py',122),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets','variable',7,'p_variable','Parser.py',123),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',10,'p_variable','Parser.py',124),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',13,'p_variable','Parser.py',125),
  ('variable_type -> word','variable_type',1,'p_variable_type','Parser.py',149),
  ('variable_type -> float','variable_type',1,'p_variable_type','Parser.py',150),
  ('variable_type -> bool','variable_type',1,'p_variable_type','Parser.py',151),
  ('base_if -> if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','base_if',9,'p_base_if','Parser.py',157),
  ('conditions -> base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',162),
  ('conditions -> base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',7,'p_conditions','Parser.py',163),
  ('conditions -> base_if else_ifs end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',164),
  ('conditions -> base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',8,'p_conditions','Parser.py',165),
  ('else_ifs -> elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',9,'p_else_ifs','Parser.py',170),
  ('else_ifs -> else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',10,'p_else_ifs','Parser.py',171),
  ('loops -> while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO','loops',8,'p_loops','Parser.py',176),
  ('loops -> do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE','loops',9,'p_loops','Parser.py',177),
  ('loops -> for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO','loops',17,'p_loops','Parser.py',178),
  ('logic_expression -> arithmetic_expression','logic_expression',1,'p_logic_expression','Parser.py',183),
  ('logic_expression -> logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET','logic_expression',4,'p_logic_expression','Parser.py',184),
  ('logic_expression -> open_parenthesis logic_expression close_parenthesis','logic_expression',3,'p_logic_expression','Parser.py',185),
  ('logic_operator -> and ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',190),
  ('logic_operator -> or ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',191),
  ('logic_operator -> is_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',192),
  ('logic_operator -> is_not_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',193),
  ('logic_operator -> greater_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',194),
  ('logic_operator -> greater_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',195),
  ('logic_operator -> less_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',196),
  ('logic_operator -> less_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',197),
  ('arithmetic_expression -> value','arithmetic_expression',1,'p_arithmetic_expression','Parser.py',202),
  ('arithmetic_expression -> arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET','arithmetic_expression',4,'p_arithmetic_expression','Parser.py',203),
  ('arithmetic_expression -> open_parenthesis arithmetic_expression close_parenthesis','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',204),
  ('arithmetic_operator -> sum ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',209),
  ('arithmetic_operator -> substraction ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',210),
  ('arithmetic_operator -> multiplication ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',211),
  ('arithmetic_operator -> division ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',212),
  ('arithmetic_operator -> exponent ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',213),
  ('possible_values -> real_value','possible_values',1,'p_possible_values','Parser.py',218),
  ('possible_values -> functions','possible_values',1,'p_possible_values','Parser.py',219),
  ('possible_values -> ids_access','possible_values',1,'p_possible_values','Parser.py',220),
  ('value -> possible_values','value',1,'p_value','Parser.py',225),
  ('value -> not possible_values ACTION_ADD_NOT_OPERAND','value',3,'p_value','Parser.py',226),
  ('value -> open_parenthesis value close_parenthesis','value',3,'p_value','Parser.py',227),
  ('ids_access -> id ACTION_ADD_VAR_VALUE','ids_access',2,'p_ids_access','Parser.py',232),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND','ids_access',6,'p_ids_access','Parser.py',233),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND','ids_access',9,'p_ids_access','Parser.py',234),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND','ids_access',12,'p_ids_access','Parser.py',235),
  ('ids_access -> open_parenthesis ids_access close_parenthesis','ids_access',3,'p_ids_access','Parser.py',236),
  ('real_value -> word_value ACTION_ADD_WORD_VALUE','real_value',2,'p_real_value','Parser.py',241),
  ('real_value -> float_value ACTION_ADD_FLOAT_VALUE','real_value',2,'p_real_value','Parser.py',242),
  ('real_value -> bool_value ACTION_ADD_BOOL_VALUE','real_value',2,'p_real_value','Parser.py',243),
  ('real_value -> id ACTION_ADD_VAR_VALUE','real_value',2,'p_real_value','Parser.py',244),
  ('calls -> gosub id ACTION_ADD_SUBROUTINE_CALL','calls',3,'p_calls','Parser.py',249),
  ('calls -> functions','calls',1,'p_calls','Parser.py',250),
  ('subroutines -> sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines','subroutines',8,'p_subroutines','Parser.py',255),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',11,'p_subroutines','Parser.py',256),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',12,'p_subroutines','Parser.py',257),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',13,'p_subroutines','Parser.py',258),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',14,'p_subroutines','Parser.py',259),
  ('subroutines -> <empty>','subroutines',0,'p_subroutines','Parser.py',260),
  ('assign -> let ids_access equals logic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',276),
  ('assign -> let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',277),
  ('parameters -> variable','parameters',1,'p_parameters','Parser.py',282),
  ('parameters -> parameters comma parameters','parameters',3,'p_parameters','Parser.py',283),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis','functions',4,'p_functions','Parser.py',288),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis','functions',6,'p_functions','Parser.py',289),
  ('arguments -> ByVal value ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',294),
  ('arguments -> ByRef id ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',295),
  ('arguments -> arguments comma arguments','arguments',3,'p_arguments','Parser.py',296),
  ('read_or_write -> print','read_or_write',1,'p_read_or_write','Parser.py',301),
  ('read_or_write -> read','read_or_write',1,'p_read_or_write','Parser.py',302),
  ('read_or_write -> dunkelCls','read_or_write',1,'p_read_or_write','Parser.py',303),
  ('print -> dunkelPrint multiple_print','print',2,'p_print','Parser.py',308),
  ('print -> dunkelPrint open_parenthesis multiple_print close_parenthesis','print',4,'p_print','Parser.py',309),
  ('multiple_print -> string','multiple_print',1,'p_multiple_print','Parser.py',314),
  ('multiple_print -> arithmetic_expression','multiple_print',1,'p_multiple_print','Parser.py',315),
  ('multiple_print -> multiple_print comma multiple_print','multiple_print',3,'p_multiple_print','Parser.py',316),
  ('read -> dunkelRead multiple_read','read',2,'p_read','Parser.py',321),
  ('read -> dunkelRead string comma multiple_read','read',4,'p_read','Parser.py',322),
  ('multiple_read -> ids_access','multiple_read',1,'p_multiple_read','Parser.py',327),
  ('multiple_read -> multiple_read comma ids_access','multiple_read',3,'p_multiple_read','Parser.py',328),
  ('ACTION_ADD_FOR_VALUE -> <empty>','ACTION_ADD_FOR_VALUE',0,'p_action_add_for_value','Parser.py',333),
  ('ACTION_ADD_VAR_VALUE -> <empty>','ACTION_ADD_VAR_VALUE',0,'p_action_add_var_value','Parser.py',346),
  ('ACTION_ADD_WORD_VALUE -> <empty>','ACTION_ADD_WORD_VALUE',0,'p_action_add_word_value','Parser.py',354),
  ('ACTION_ADD_FLOAT_VALUE -> <empty>','ACTION_ADD_FLOAT_VALUE',0,'p_action_add_float_value','Parser.py',360),
  ('ACTION_ADD_BOOL_VALUE -> <empty>','ACTION_ADD_BOOL_VALUE',0,'p_action_add_bool_value','Parser.py',366),
  ('ACTION_ADD_OPERATOR -> <empty>','ACTION_ADD_OPERATOR',0,'p_action_add_operator','Parser.py',372),
  ('ACTION_ADD_FUNCTION_OPERAND -> <empty>','ACTION_ADD_FUNCTION_OPERAND',0,'p_action_add_function_operand','Parser.py',378),
  ('ACTION_ADD_FUNCTION_CALL -> <empty>','ACTION_ADD_FUNCTION_CALL',0,'p_action_add_function_call','Parser.py',386),
  ('ACTION_ADD_SUBROUTINE_CALL -> <empty>','ACTION_ADD_SUBROUTINE_CALL',0,'p_action_add_subroutine_call','Parser.py',395),
  ('ACTION_ADD_FUNCTION -> <empty>','ACTION_ADD_FUNCTION',0,'p_action_add_function','Parser.py',404),
  ('ACTION_ADD_PROCEDURE -> <empty>','ACTION_ADD_PROCEDURE',0,'p_action_add_procedure','Parser.py',413),
  ('ACTION_ADD_END_FUNCTION -> <empty>','ACTION_ADD_END_FUNCTION',0,'p_action_add_end_function','Parser.py',422),
  ('ACTION_ASSIGN_VALUE -> <empty>','ACTION_ASSIGN_VALUE',0,'p_action_assign_value','Parser.py',430),
  ('ACTION_ADD_PARAMETERS -> <empty>','ACTION_ADD_PARAMETERS',0,'p_action_add_parameters','Parser.py',441),
  ('ACTION_ADD_NOT_OPERAND -> <empty>','ACTION_ADD_NOT_OPERAND',0,'p_action_add_not_operand','Parser.py',454),
  ('ACTION_ADD_QUADRUPLET -> <empty>','ACTION_ADD_QUADRUPLET',0,'p_action_add_quadruplet','Parser.py',470),
  ('ACTION_ADD_ONE_DIM_OPERAND -> <empty>','ACTION_ADD_ONE_DIM_OPERAND',0,'p_action_add_one_dim_operand','Parser.py',490),
  ('ACTION_ADD_TWO_DIM_OPERAND -> <empty>','ACTION_ADD_TWO_DIM_OPERAND',0,'p_action_add_two_dim_operand','Parser.py',500),
  ('ACTION_ADD_THREE_DIM_OPERAND -> <empty>','ACTION_ADD_THREE_DIM_OPERAND',0,'p_action_add_three_dim_operand','Parser.py',511),
  ('ACTION_ADD_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_quadruplet_empty_jump','Parser.py',523),
  ('ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_while_quadruplet_empty_jump','Parser.py',537),
  ('ACTION_NEW_IF -> <empty>','ACTION_NEW_IF',0,'p_action_new_if','Parser.py',558),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_END_IF -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_END_IF',0,'p_action_quadruplet_empty_jump_end_if','Parser.py',565),
  ('ACTION_FILL_JUMP -> <empty>','ACTION_FILL_JUMP',0,'p_action_fill_jump','Parser.py',575),
  ('ACTION_FILL_JUMP_END_IF -> <empty>','ACTION_FILL_JUMP_END_IF',0,'p_action_fill_jump_end_if','Parser.py',584),
  ('ACTION_FOR_JUMP_BACK -> <empty>','ACTION_FOR_JUMP_BACK',0,'p_action_for_jump_back','Parser.py',595),
  ('ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_for_quadruplet_empty_jump','Parser.py',602),
  ('ACTION_FOR_INCREMENT -> <empty>','ACTION_FOR_INCREMENT',0,'p_action_for_increment','Parser.py',623),
  ('ACTION_FOR_GOTO -> <empty>','ACTION_FOR_GOTO',0,'p_action_for_goto','Parser.py',632),
  ('ACTION_WHILE_GOTO -> <empty>','ACTION_WHILE_GOTO',0,'p_action_while_goto','Parser.py',643),
  ('ACTION_DO_WHILE_INDEX -> <empty>','ACTION_DO_WHILE_INDEX',0,'p_action_do_while_jump_index','Parser.py',655),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE',0,'p_action_quadruplet_empty_jump_do_while','Parser.py',661),
]
