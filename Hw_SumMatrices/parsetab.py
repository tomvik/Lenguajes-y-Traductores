
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ByRef ByVal and as bool bool_value close_braces close_brackets close_parenthesis colon comma dim division do dunkelCls dunkelPrint dunkelRead else elsif end end_if equals exit exponent false float float_value for function gosub goto greater_or_equal_than greater_than id if is_equal is_not_equal less_or_equal_than less_than let loop multiplication next not open_braces open_brackets open_parenthesis or procedure return semicolon step string sub substraction sum then to true until wend while word word_value\n        program : inside_logic end\n        program : inside_logic end subroutines\n        \n        inside_logic : variable inside_logic\n        inside_logic : conditions inside_logic\n        inside_logic : loops inside_logic\n        inside_logic : calls inside_logic\n        inside_logic : read_or_write inside_logic\n        inside_logic : assign inside_logic\n        |\n        \n        variable : dim id as variable_type\n        variable : dim id as variable_type open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets\n        \n        variable_type : word\n        variable_type : float\n        variable_type : bool\n        \n        conditions : if open_parenthesis logic_expression close_parenthesis then inside_logic end if\n        conditions : if open_parenthesis logic_expression close_parenthesis then inside_logic else inside_logic end if\n        conditions : if open_parenthesis logic_expression close_parenthesis then inside_logic else_ifs end if\n        conditions : if open_parenthesis logic_expression close_parenthesis then inside_logic else_ifs else inside_logic end if\n        \n        else_ifs : elsif open_parenthesis logic_expression close_parenthesis then inside_logic\n        else_ifs : else_ifs else_ifs\n        \n        loops : while open_parenthesis logic_expression close_parenthesis inside_logic wend\n        loops : do inside_logic loop until open_parenthesis logic_expression close_parenthesis\n        loops : for id equals arithmetic_expression to arithmetic_expression step arithmetic_expression inside_logic next id\n        \n        logic_expression : arithmetic_expression\n        logic_expression : bool_value\n        logic_expression : not ACTION_ADD_OPERAND logic_expression\n        logic_expression : logic_expression logic_operand logic_expression\n        logic_expression : open_parenthesis logic_expression close_parenthesis\n        \n        logic_operand : and ACTION_ADD_OPERAND\n        logic_operand : or ACTION_ADD_OPERAND\n        logic_operand : is_equal ACTION_ADD_OPERAND\n        logic_operand : is_not_equal ACTION_ADD_OPERAND\n        logic_operand : greater_than ACTION_ADD_OPERAND\n        logic_operand : greater_or_equal_than ACTION_ADD_OPERAND\n        logic_operand : less_than ACTION_ADD_OPERAND\n        logic_operand : less_or_equal_than ACTION_ADD_OPERAND\n        \n        arithmetic_expression : value\n        arithmetic_expression : value arithmetic_operand value\n        arithmetic_expression : arithmetic_expression arithmetic_operand arithmetic_expression\n        \n        arithmetic_operand : sum ACTION_ADD_OPERAND\n        arithmetic_operand : substraction ACTION_ADD_OPERAND\n        arithmetic_operand : multiplication ACTION_ADD_OPERAND\n        arithmetic_operand : division ACTION_ADD_OPERAND\n        arithmetic_operand : exponent ACTION_ADD_OPERAND\n        \n        value : real_value\n        value : functions\n        value : open_parenthesis arithmetic_expression close_parenthesis\n        value : ids_access\n        \n        ids_access : id\n        ids_access : id open_brackets arithmetic_expression close_brackets \n        ids_access : id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets \n        ids_access : id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets\n        ids_access : open_parenthesis ids_access close_parenthesis\n        \n        real_value : word_value\n        real_value : float_value\n        real_value : id\n        \n        calls : gosub id\n        calls : functions\n        \n        subroutines : sub procedure id inside_logic return subroutines\n        subroutines : sub function id open_parenthesis close_parenthesis inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis parameters close_parenthesis inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis close_parenthesis as variable_type inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub subroutines\n        |\n        \n        assign : let id equals logic_expression\n        assign : let id equals arithmetic_expression\n        \n        parameters : variable\n        parameters : parameters comma parameters\n        \n        functions : id open_parenthesis close_parenthesis\n        functions : id open_parenthesis arguments close_parenthesis\n        \n        arguments : ByVal value\n        arguments : ByRef id\n        arguments : arguments comma arguments\n        \n        read_or_write : print\n        read_or_write : read\n        read_or_write : dunkelCls\n        \n        print : dunkelPrint multiple_print\n        print : dunkelPrint open_parenthesis multiple_print close_parenthesis\n        \n        multiple_print : string\n        multiple_print : arithmetic_expression\n        multiple_print : multiple_print comma multiple_print\n        \n        read : dunkelRead multiple_read\n        read : dunkelRead string comma multiple_read\n        \n        multiple_read : ids_access\n        multiple_read : multiple_read comma multiple_read\n        \n        ACTION_ADD_OPERAND :\n        '
    
_lr_action_items = {'end':([0,2,3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,136,137,138,147,151,155,156,161,164,166,167,169,173,175,178,179,180,182,185,187,188,193,194,199,201,202,203,211,213,214,215,216,221,224,],[-9,23,-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-9,-29,-28,-52,165,-23,-9,-11,-9,181,-24,186,-9,-17,192,-22,-9,-53,-9,200,-19,204,209,-9,-12,-18,219,-20,-9,-25,-54,-21,-13,]),'dim':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,153,156,161,164,166,169,175,176,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[9,9,9,9,9,9,9,9,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,9,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,9,-30,9,-29,-28,-52,9,-23,9,-11,9,-24,9,9,-17,9,9,-53,9,-19,9,-12,-18,-20,9,-25,-54,-13,]),'if':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,165,166,169,175,178,181,182,184,185,187,192,193,201,202,203,204,213,214,215,216,224,],[11,11,11,11,11,11,11,11,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,11,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,11,-30,11,-29,-28,-52,-23,11,-11,178,11,-24,11,-17,193,11,11,-53,11,203,-19,11,-12,-18,213,-20,11,-25,-54,-13,]),'while':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[12,12,12,12,12,12,12,12,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,12,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,12,-30,12,-29,-28,-52,-23,12,-11,12,-24,12,-17,12,12,-53,12,-19,12,-12,-18,-20,12,-25,-54,-13,]),'do':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[13,13,13,13,13,13,13,13,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,13,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,13,-30,13,-29,-28,-52,-23,13,-11,13,-24,13,-17,13,13,-53,13,-19,13,-12,-18,-20,13,-25,-54,-13,]),'for':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[14,14,14,14,14,14,14,14,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,14,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,14,-30,14,-29,-28,-52,-23,14,-11,14,-24,14,-17,14,14,-53,14,-19,14,-12,-18,-20,14,-25,-54,-13,]),'gosub':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[15,15,15,15,15,15,15,15,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,15,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,15,-30,15,-29,-28,-52,-23,15,-11,15,-24,15,-17,15,15,-53,15,-19,15,-12,-18,-20,15,-25,-54,-13,]),'dunkelCls':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[19,19,19,19,19,19,19,19,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,19,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,19,-30,19,-29,-28,-52,-23,19,-11,19,-24,19,-17,19,19,-53,19,-19,19,-12,-18,-20,19,-25,-54,-13,]),'let':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[20,20,20,20,20,20,20,20,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,20,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,20,-30,20,-29,-28,-52,-23,20,-11,20,-24,20,-17,20,20,-53,20,-19,20,-12,-18,-20,20,-25,-54,-13,]),'id':([0,3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,21,22,32,33,36,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,57,59,60,61,63,64,65,68,69,70,71,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,96,98,102,103,104,105,106,107,108,109,110,111,112,115,116,117,119,120,121,122,123,124,125,126,127,128,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,156,159,161,164,166,169,170,175,178,182,183,184,185,187,193,197,201,202,203,206,213,214,215,216,224,],[10,10,10,10,10,10,10,30,10,35,36,-60,-76,-77,-78,37,48,52,48,48,-59,-79,75,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,52,-71,48,97,75,-26,-27,-88,48,48,48,75,48,-88,-88,-88,-88,-88,48,48,52,52,132,133,-10,-14,-15,-16,-72,75,75,48,-88,-88,-88,-88,-88,-88,-88,-88,48,10,-67,-26,-83,-80,-49,-55,-41,-42,-43,-44,-45,-46,-40,-87,-85,10,-30,10,-29,-31,-32,-33,-34,-35,-36,-37,-38,-28,48,48,-52,-23,48,10,-11,10,-24,48,10,-17,10,48,10,-53,10,-19,48,10,-12,-18,215,-20,10,-25,-54,-13,]),'dunkelPrint':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[21,21,21,21,21,21,21,21,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,21,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,21,-30,21,-29,-28,-52,-23,21,-11,21,-24,21,-17,21,21,-53,21,-19,21,-12,-18,-20,21,-25,-54,-13,]),'dunkelRead':([0,3,4,5,6,7,8,13,16,17,18,19,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,132,136,137,138,147,151,156,161,164,166,169,175,178,182,184,185,187,193,201,202,203,213,214,215,216,224,],[22,22,22,22,22,22,22,22,-60,-76,-77,-78,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,22,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,22,-30,22,-29,-28,-52,-23,22,-11,22,-24,22,-17,22,22,-53,22,-19,22,-12,-18,-20,22,-25,-54,-13,]),'$end':([1,23,54,160,172,198,208,210,217,218,222,223,225,],[0,-1,-2,-66,-61,-66,-62,-66,-66,-63,-64,-66,-65,]),'loop':([3,4,5,6,7,8,13,16,17,18,19,24,25,26,27,28,29,34,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,136,138,147,151,156,164,169,178,185,193,202,203,213,215,216,224,],[-9,-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,67,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-29,-28,-52,-23,-11,-24,-17,-53,-19,-12,-18,-20,-25,-54,-13,]),'wend':([3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,112,115,116,117,119,120,121,122,128,130,131,136,138,147,148,151,156,164,169,178,185,193,202,203,213,215,216,224,],[-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-9,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-29,-28,156,-52,-23,-11,-24,-17,-53,-19,-12,-18,-20,-25,-54,-13,]),'return':([3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,132,136,138,147,151,152,156,164,169,178,185,193,202,203,213,215,216,224,],[-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-9,-30,-29,-28,-52,160,-23,-11,-24,-17,-53,-19,-12,-18,-20,-25,-54,-13,]),'else':([3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,136,137,138,147,151,155,156,164,167,169,178,180,185,193,202,203,213,214,215,216,221,224,],[-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-9,-29,-28,-52,166,-23,-11,182,-24,-17,-22,-53,-19,-12,-18,-20,-9,-25,-54,-21,-13,]),'elsif':([3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,136,137,138,147,151,155,156,164,167,169,178,180,185,193,202,203,213,214,215,216,221,224,],[-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-9,-29,-28,-52,168,-23,-11,168,-24,-17,168,-53,-19,-12,-18,-20,-9,-25,-54,-21,-13,]),'next':([3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,36,38,40,41,42,43,44,45,46,47,48,49,51,52,57,63,64,89,90,91,92,93,115,116,117,119,120,121,122,128,130,131,136,138,147,151,156,164,169,178,184,185,193,196,202,203,213,215,216,224,],[-9,-9,-9,-9,-9,-9,-60,-76,-77,-78,-3,-4,-5,-6,-7,-8,-59,-79,-81,-82,-39,-47,-48,-50,-56,-57,-51,-84,-86,-51,-71,-26,-27,-10,-14,-15,-16,-72,-67,-26,-83,-80,-49,-55,-41,-40,-87,-85,-30,-29,-28,-52,-23,-11,-24,-17,-9,-53,-19,206,-12,-18,-20,-25,-54,-13,]),'open_parenthesis':([10,11,12,21,22,32,33,39,48,53,59,61,65,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,96,98,102,103,104,105,106,107,108,109,110,111,113,123,124,125,126,127,133,139,140,141,142,143,144,145,146,149,150,159,168,170,183,197,],[31,32,33,39,53,61,61,71,31,53,96,98,-88,96,61,96,71,31,96,-88,-88,-88,-88,-88,96,96,53,53,71,98,61,-88,-88,-88,-88,-88,-88,-88,-88,61,149,-42,-43,-44,-45,-46,153,-31,-32,-33,-34,-35,-36,-37,-38,61,96,96,183,96,61,96,]),'string':([21,22,39,70,],[40,50,40,40,]),'word_value':([21,32,33,39,59,61,65,68,69,70,71,76,77,78,79,80,81,82,83,96,98,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,134,139,140,141,142,143,144,145,146,149,150,159,170,177,183,197,212,],[46,46,46,46,46,46,-88,46,46,46,46,46,-88,-88,-88,-88,-88,46,46,46,46,46,-88,-88,-88,-88,-88,-88,-88,-88,46,-42,-43,-44,-45,-46,154,-31,-32,-33,-34,-35,-36,-37,-38,46,46,46,46,191,46,46,220,]),'float_value':([21,32,33,39,59,61,65,68,69,70,71,76,77,78,79,80,81,82,83,96,98,102,103,104,105,106,107,108,109,110,111,123,124,125,126,127,139,140,141,142,143,144,145,146,149,150,159,170,183,197,],[47,47,47,47,47,47,-88,47,47,47,47,47,-88,-88,-88,-88,-88,47,47,47,47,47,-88,-88,-88,-88,-88,-88,-88,-88,47,-42,-43,-44,-45,-46,-31,-32,-33,-34,-35,-36,-37,-38,47,47,47,47,47,47,]),'sub':([23,160,186,198,200,209,210,217,219,223,],[55,55,198,55,210,217,55,55,223,55,]),'as':([30,161,175,],[56,174,189,]),'close_parenthesis':([31,40,41,42,43,44,45,46,47,48,52,57,58,62,63,64,66,72,73,74,75,86,89,90,91,92,93,95,97,99,100,117,118,120,121,122,128,135,136,138,147,151,153,157,162,163,164,185,190,195,202,216,224,],[57,-81,-82,-39,-47,-48,-50,-56,-57,-51,-51,-71,93,101,-26,-27,112,119,120,121,-51,121,-10,-14,-15,-16,-72,-73,-74,136,120,-83,120,-49,-55,-41,-40,-75,-30,-29,-28,-52,161,169,175,-69,-11,-53,-70,205,-12,-54,-13,]),'ByVal':([31,94,],[59,59,]),'ByRef':([31,94,],[60,60,]),'bool_value':([32,33,61,65,69,98,102,103,104,105,106,107,108,109,110,111,139,140,141,142,143,144,145,146,149,183,],[64,64,64,-88,64,64,64,-88,-88,-88,-88,-88,-88,-88,-88,64,-31,-32,-33,-34,-35,-36,-37,-38,64,64,]),'not':([32,33,61,65,69,98,102,103,104,105,106,107,108,109,110,111,139,140,141,142,143,144,145,146,149,183,],[65,65,65,-88,65,65,65,-88,-88,-88,-88,-88,-88,-88,-88,65,-31,-32,-33,-34,-35,-36,-37,-38,65,65,]),'equals':([35,37,],[68,69,]),'comma':([38,40,41,42,43,44,45,46,47,48,49,50,51,52,57,58,72,73,74,75,89,90,91,92,93,95,97,117,120,121,122,128,130,131,135,151,162,163,164,185,190,202,216,224,],[70,-81,-82,-39,-47,-48,-50,-56,-57,-51,84,85,-86,-51,-71,94,70,-82,-50,-51,-10,-14,-15,-16,-72,-73,-74,70,-49,-55,-41,-40,84,84,94,-52,176,-69,-11,-53,176,-12,-54,-13,]),'sum':([41,42,43,44,45,46,47,48,57,63,73,74,75,93,100,114,116,118,120,121,122,128,129,151,158,171,184,185,207,216,],[77,77,-47,-48,-50,-56,-57,-51,-71,77,77,-50,-51,-72,77,77,77,77,-49,-55,77,-40,77,-52,77,77,77,-53,77,-54,]),'substraction':([41,42,43,44,45,46,47,48,57,63,73,74,75,93,100,114,116,118,120,121,122,128,129,151,158,171,184,185,207,216,],[78,78,-47,-48,-50,-56,-57,-51,-71,78,78,-50,-51,-72,78,78,78,78,-49,-55,78,-40,78,-52,78,78,78,-53,78,-54,]),'multiplication':([41,42,43,44,45,46,47,48,57,63,73,74,75,93,100,114,116,118,120,121,122,128,129,151,158,171,184,185,207,216,],[79,79,-47,-48,-50,-56,-57,-51,-71,79,79,-50,-51,-72,79,79,79,79,-49,-55,79,-40,79,-52,79,79,79,-53,79,-54,]),'division':([41,42,43,44,45,46,47,48,57,63,73,74,75,93,100,114,116,118,120,121,122,128,129,151,158,171,184,185,207,216,],[80,80,-47,-48,-50,-56,-57,-51,-71,80,80,-50,-51,-72,80,80,80,80,-49,-55,80,-40,80,-52,80,80,80,-53,80,-54,]),'exponent':([41,42,43,44,45,46,47,48,57,63,73,74,75,93,100,114,116,118,120,121,122,128,129,151,158,171,184,185,207,216,],[81,81,-47,-48,-50,-56,-57,-51,-71,81,81,-50,-51,-72,81,81,81,81,-49,-55,81,-40,81,-52,81,81,81,-53,81,-54,]),'and':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,103,-26,-27,103,-50,-51,-72,103,-26,103,-26,-49,-55,-41,-40,-30,103,103,-52,103,-53,103,-54,]),'or':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,104,-26,-27,104,-50,-51,-72,104,-26,104,-26,-49,-55,-41,-40,-30,104,104,-52,104,-53,104,-54,]),'is_equal':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,105,-26,-27,105,-50,-51,-72,105,-26,105,-26,-49,-55,-41,-40,-30,105,105,-52,105,-53,105,-54,]),'is_not_equal':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,106,-26,-27,106,-50,-51,-72,106,-26,106,-26,-49,-55,-41,-40,-30,106,106,-52,106,-53,106,-54,]),'greater_than':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,107,-26,-27,107,-50,-51,-72,107,-26,107,-26,-49,-55,-41,-40,-30,107,107,-52,107,-53,107,-54,]),'greater_or_equal_than':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,108,-26,-27,108,-50,-51,-72,108,-26,108,-26,-49,-55,-41,-40,-30,108,108,-52,108,-53,108,-54,]),'less_than':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,109,-26,-27,109,-50,-51,-72,109,-26,109,-26,-49,-55,-41,-40,-30,109,109,-52,109,-53,109,-54,]),'less_or_equal_than':([42,43,44,45,46,47,48,57,62,63,64,66,74,75,93,99,100,115,116,120,121,122,128,136,138,147,151,157,185,195,216,],[-39,-47,-48,-50,-56,-57,-51,-71,110,-26,-27,110,-50,-51,-72,110,-26,110,-26,-49,-55,-41,-40,-30,110,110,-52,110,-53,110,-54,]),'to':([42,43,44,45,46,47,48,57,93,114,120,121,122,128,151,185,216,],[-39,-47,-48,-50,-56,-57,-51,-71,-72,150,-49,-55,-41,-40,-52,-53,-54,]),'close_brackets':([42,43,44,45,46,47,48,57,93,120,121,122,128,129,151,154,171,185,191,207,216,220,],[-39,-47,-48,-50,-56,-57,-51,-71,-72,-49,-55,-41,-40,151,-52,164,185,-53,202,216,-54,224,]),'step':([42,43,44,45,46,47,48,57,93,120,121,122,128,151,158,185,216,],[-39,-47,-48,-50,-56,-57,-51,-71,-72,-49,-55,-41,-40,-52,170,-53,-54,]),'open_brackets':([48,52,75,89,90,91,92,151,164,185,202,],[83,83,83,134,-14,-15,-16,159,177,197,212,]),'procedure':([55,],[87,]),'function':([55,],[88,]),'word':([56,174,189,],[90,90,90,]),'float':([56,174,189,],[91,91,91,]),'bool':([56,174,189,],[92,92,92,]),'until':([67,],[113,]),'then':([101,205,],[137,214,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'inside_logic':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[2,24,25,26,27,28,29,34,148,152,155,173,179,188,194,196,199,211,221,]),'variable':([0,3,4,5,6,7,8,13,112,132,137,153,161,166,175,176,182,184,187,201,214,],[3,3,3,3,3,3,3,3,3,3,3,163,3,3,3,163,3,3,3,3,3,]),'conditions':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loops':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'calls':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'read_or_write':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assign':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'functions':([0,3,4,5,6,7,8,13,21,32,33,39,59,61,68,69,70,71,76,82,83,96,98,102,111,112,132,137,149,150,159,161,166,170,175,182,183,184,187,197,201,214,],[16,16,16,16,16,16,16,16,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,16,16,16,44,44,44,16,16,44,16,16,44,16,16,44,16,16,]),'print':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'read':([0,3,4,5,6,7,8,13,112,132,137,161,166,175,182,184,187,201,214,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'multiple_print':([21,39,70,],[38,72,117,]),'arithmetic_expression':([21,32,33,39,61,68,69,70,71,76,83,96,98,102,111,149,150,159,170,183,197,],[41,63,63,73,100,114,116,41,118,122,129,118,100,63,63,63,158,171,184,63,207,]),'value':([21,32,33,39,59,61,68,69,70,71,76,82,83,96,98,102,111,149,150,159,170,183,197,],[42,42,42,42,95,42,42,42,42,42,42,128,42,42,42,42,42,42,42,42,42,42,42,]),'real_value':([21,32,33,39,59,61,68,69,70,71,76,82,83,96,98,102,111,149,150,159,170,183,197,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ids_access':([21,22,32,33,39,53,59,61,68,69,70,71,76,82,83,84,85,96,98,102,111,149,150,159,170,183,197,],[45,51,45,45,74,86,45,74,45,45,45,74,45,45,45,51,51,74,74,45,45,45,45,45,45,45,45,]),'multiple_read':([22,84,85,],[49,130,131,]),'subroutines':([23,160,198,210,217,223,],[54,172,208,218,222,225,]),'arguments':([31,94,],[58,135,]),'logic_expression':([32,33,61,69,98,102,111,149,183,],[62,66,99,115,99,138,147,157,195,]),'arithmetic_operand':([41,42,63,73,100,114,116,118,122,129,158,171,184,207,],[76,82,76,76,76,76,76,76,76,76,76,76,76,76,]),'variable_type':([56,174,189,],[89,187,201,]),'logic_operand':([62,66,99,115,138,147,157,195,],[102,102,102,102,102,102,102,102,]),'ACTION_ADD_OPERAND':([65,77,78,79,80,81,103,104,105,106,107,108,109,110,],[111,123,124,125,126,127,139,140,141,142,143,144,145,146,]),'parameters':([153,176,],[162,190,]),'else_ifs':([155,167,180,],[167,180,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> inside_logic end','program',2,'p_program','Parser.py',39),
  ('program -> inside_logic end subroutines','program',3,'p_program','Parser.py',40),
  ('inside_logic -> variable inside_logic','inside_logic',2,'p_inside_logic','Parser.py',48),
  ('inside_logic -> conditions inside_logic','inside_logic',2,'p_inside_logic','Parser.py',49),
  ('inside_logic -> loops inside_logic','inside_logic',2,'p_inside_logic','Parser.py',50),
  ('inside_logic -> calls inside_logic','inside_logic',2,'p_inside_logic','Parser.py',51),
  ('inside_logic -> read_or_write inside_logic','inside_logic',2,'p_inside_logic','Parser.py',52),
  ('inside_logic -> assign inside_logic','inside_logic',2,'p_inside_logic','Parser.py',53),
  ('inside_logic -> <empty>','inside_logic',0,'p_inside_logic','Parser.py',54),
  ('variable -> dim id as variable_type','variable',4,'p_variable','Parser.py',59),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets','variable',7,'p_variable','Parser.py',60),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',10,'p_variable','Parser.py',61),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',13,'p_variable','Parser.py',62),
  ('variable_type -> word','variable_type',1,'p_variable_type','Parser.py',86),
  ('variable_type -> float','variable_type',1,'p_variable_type','Parser.py',87),
  ('variable_type -> bool','variable_type',1,'p_variable_type','Parser.py',88),
  ('conditions -> if open_parenthesis logic_expression close_parenthesis then inside_logic end if','conditions',8,'p_conditions','Parser.py',94),
  ('conditions -> if open_parenthesis logic_expression close_parenthesis then inside_logic else inside_logic end if','conditions',10,'p_conditions','Parser.py',95),
  ('conditions -> if open_parenthesis logic_expression close_parenthesis then inside_logic else_ifs end if','conditions',9,'p_conditions','Parser.py',96),
  ('conditions -> if open_parenthesis logic_expression close_parenthesis then inside_logic else_ifs else inside_logic end if','conditions',11,'p_conditions','Parser.py',97),
  ('else_ifs -> elsif open_parenthesis logic_expression close_parenthesis then inside_logic','else_ifs',6,'p_else_ifs','Parser.py',102),
  ('else_ifs -> else_ifs else_ifs','else_ifs',2,'p_else_ifs','Parser.py',103),
  ('loops -> while open_parenthesis logic_expression close_parenthesis inside_logic wend','loops',6,'p_loops','Parser.py',108),
  ('loops -> do inside_logic loop until open_parenthesis logic_expression close_parenthesis','loops',7,'p_loops','Parser.py',109),
  ('loops -> for id equals arithmetic_expression to arithmetic_expression step arithmetic_expression inside_logic next id','loops',11,'p_loops','Parser.py',110),
  ('logic_expression -> arithmetic_expression','logic_expression',1,'p_logic_expression','Parser.py',115),
  ('logic_expression -> bool_value','logic_expression',1,'p_logic_expression','Parser.py',116),
  ('logic_expression -> not ACTION_ADD_OPERAND logic_expression','logic_expression',3,'p_logic_expression','Parser.py',117),
  ('logic_expression -> logic_expression logic_operand logic_expression','logic_expression',3,'p_logic_expression','Parser.py',118),
  ('logic_expression -> open_parenthesis logic_expression close_parenthesis','logic_expression',3,'p_logic_expression','Parser.py',119),
  ('logic_operand -> and ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',124),
  ('logic_operand -> or ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',125),
  ('logic_operand -> is_equal ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',126),
  ('logic_operand -> is_not_equal ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',127),
  ('logic_operand -> greater_than ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',128),
  ('logic_operand -> greater_or_equal_than ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',129),
  ('logic_operand -> less_than ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',130),
  ('logic_operand -> less_or_equal_than ACTION_ADD_OPERAND','logic_operand',2,'p_logic_operand','Parser.py',131),
  ('arithmetic_expression -> value','arithmetic_expression',1,'p_arithmetic_expression','Parser.py',136),
  ('arithmetic_expression -> value arithmetic_operand value','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',137),
  ('arithmetic_expression -> arithmetic_expression arithmetic_operand arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',138),
  ('arithmetic_operand -> sum ACTION_ADD_OPERAND','arithmetic_operand',2,'p_arithmetic_operand','Parser.py',143),
  ('arithmetic_operand -> substraction ACTION_ADD_OPERAND','arithmetic_operand',2,'p_arithmetic_operand','Parser.py',144),
  ('arithmetic_operand -> multiplication ACTION_ADD_OPERAND','arithmetic_operand',2,'p_arithmetic_operand','Parser.py',145),
  ('arithmetic_operand -> division ACTION_ADD_OPERAND','arithmetic_operand',2,'p_arithmetic_operand','Parser.py',146),
  ('arithmetic_operand -> exponent ACTION_ADD_OPERAND','arithmetic_operand',2,'p_arithmetic_operand','Parser.py',147),
  ('value -> real_value','value',1,'p_value','Parser.py',153),
  ('value -> functions','value',1,'p_value','Parser.py',154),
  ('value -> open_parenthesis arithmetic_expression close_parenthesis','value',3,'p_value','Parser.py',155),
  ('value -> ids_access','value',1,'p_value','Parser.py',156),
  ('ids_access -> id','ids_access',1,'p_ids_access','Parser.py',161),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets','ids_access',4,'p_ids_access','Parser.py',162),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets','ids_access',7,'p_ids_access','Parser.py',163),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets','ids_access',10,'p_ids_access','Parser.py',164),
  ('ids_access -> open_parenthesis ids_access close_parenthesis','ids_access',3,'p_ids_access','Parser.py',165),
  ('real_value -> word_value','real_value',1,'p_real_value','Parser.py',170),
  ('real_value -> float_value','real_value',1,'p_real_value','Parser.py',171),
  ('real_value -> id','real_value',1,'p_real_value','Parser.py',172),
  ('calls -> gosub id','calls',2,'p_calls','Parser.py',177),
  ('calls -> functions','calls',1,'p_calls','Parser.py',178),
  ('subroutines -> sub procedure id inside_logic return subroutines','subroutines',6,'p_subroutines','Parser.py',183),
  ('subroutines -> sub function id open_parenthesis close_parenthesis inside_logic end sub subroutines','subroutines',9,'p_subroutines','Parser.py',184),
  ('subroutines -> sub function id open_parenthesis parameters close_parenthesis inside_logic end sub subroutines','subroutines',10,'p_subroutines','Parser.py',185),
  ('subroutines -> sub function id open_parenthesis close_parenthesis as variable_type inside_logic end sub subroutines','subroutines',11,'p_subroutines','Parser.py',186),
  ('subroutines -> sub function id open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub subroutines','subroutines',12,'p_subroutines','Parser.py',187),
  ('subroutines -> <empty>','subroutines',0,'p_subroutines','Parser.py',188),
  ('assign -> let id equals logic_expression','assign',4,'p_assign','Parser.py',197),
  ('assign -> let id equals arithmetic_expression','assign',4,'p_assign','Parser.py',198),
  ('parameters -> variable','parameters',1,'p_parameters','Parser.py',203),
  ('parameters -> parameters comma parameters','parameters',3,'p_parameters','Parser.py',204),
  ('functions -> id open_parenthesis close_parenthesis','functions',3,'p_functions','Parser.py',209),
  ('functions -> id open_parenthesis arguments close_parenthesis','functions',4,'p_functions','Parser.py',210),
  ('arguments -> ByVal value','arguments',2,'p_arguments','Parser.py',215),
  ('arguments -> ByRef id','arguments',2,'p_arguments','Parser.py',216),
  ('arguments -> arguments comma arguments','arguments',3,'p_arguments','Parser.py',217),
  ('read_or_write -> print','read_or_write',1,'p_read_or_write','Parser.py',222),
  ('read_or_write -> read','read_or_write',1,'p_read_or_write','Parser.py',223),
  ('read_or_write -> dunkelCls','read_or_write',1,'p_read_or_write','Parser.py',224),
  ('print -> dunkelPrint multiple_print','print',2,'p_print','Parser.py',229),
  ('print -> dunkelPrint open_parenthesis multiple_print close_parenthesis','print',4,'p_print','Parser.py',230),
  ('multiple_print -> string','multiple_print',1,'p_multiple_print','Parser.py',235),
  ('multiple_print -> arithmetic_expression','multiple_print',1,'p_multiple_print','Parser.py',236),
  ('multiple_print -> multiple_print comma multiple_print','multiple_print',3,'p_multiple_print','Parser.py',237),
  ('read -> dunkelRead multiple_read','read',2,'p_read','Parser.py',242),
  ('read -> dunkelRead string comma multiple_read','read',4,'p_read','Parser.py',243),
  ('multiple_read -> ids_access','multiple_read',1,'p_multiple_read','Parser.py',248),
  ('multiple_read -> multiple_read comma multiple_read','multiple_read',3,'p_multiple_read','Parser.py',249),
  ('ACTION_ADD_OPERAND -> <empty>','ACTION_ADD_OPERAND',0,'p_action_add_operand','Parser.py',254),
]
