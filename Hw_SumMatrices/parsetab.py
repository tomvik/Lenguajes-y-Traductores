
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ByRef ByVal and as bool bool_value close_braces close_brackets close_parenthesis colon comma dim division do dunkelCls dunkelPrint dunkelRead else elsif end end_if equals exit exponent false float float_value for function gosub goto greater_or_equal_than greater_than id if is_equal is_not_equal less_or_equal_than less_than let loop multiplication next not open_braces open_brackets open_parenthesis or procedure result return semicolon step string sub substraction sum then to true until wend while word word_value\n        program : inside_logic end\n        program : inside_logic end subroutines\n        \n        inside_logic : variable inside_logic\n        inside_logic : conditions inside_logic\n        inside_logic : loops inside_logic\n        inside_logic : calls inside_logic\n        inside_logic : read_or_write inside_logic\n        |\n        \n        variable : dim id as variable_type\n        variable : dim id as variable_type open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets\n        \n        variable_type : word\n        variable_type : float\n        variable_type : bool\n        \n        conditions : if\n        \n        loops : while open_parenthesis logic_expression close_parenthesis inside_logic wend\n        loops : do inside_logic loop until open_parenthesis logic_expression close_parenthesis\n        loops : for id equals arithmetic_expression to arithmetic_expression step arithmetic_expression inside_logic next id\n        \n        logic_expression : arithmetic_expression\n        logic_expression : compared_to_bool\n        logic_expression : arithmetic_expression logic_operand arithmetic_expression\n        logic_expression : logic_expression logic_operand logic_expression\n        \n        logic_operand : and\n        logic_operand : or\n        logic_operand : not\n        logic_operand : is_equal\n        logic_operand : is_not_equal\n        logic_operand : greater_than\n        logic_operand : greater_or_equal_than\n        logic_operand : less_than\n        logic_operand : less_or_equal_than\n        \n        compared_to_bool : arithmetic_expression is_equal bool_value\n        compared_to_bool : arithmetic_expression is_not_equal bool_value\n        compared_to_bool : bool_value is_equal arithmetic_expression\n        compared_to_bool : bool_value is_not_equal arithmetic_expression\n        \n        arithmetic_expression : value\n        arithmetic_expression : value arithmetic_operand value\n        \n        arithmetic_operand : sum\n        arithmetic_operand : substraction\n        arithmetic_operand : multiplication\n        arithmetic_operand : division\n        arithmetic_operand : exponent\n        \n        value : real_value\n        value : functions\n        value : open_parenthesis arithmetic_expression close_parenthesis\n        value : ids_access\n        \n        ids_access : id\n        ids_access : id open_brackets arithmetic_expression close_brackets \n        ids_access : id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets \n        ids_access : id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets\n        ids_access : open_parenthesis ids_access close_parenthesis\n        \n        real_value : word_value\n        real_value : float_value\n        real_value : id\n        \n        calls : gosub id\n        calls : id open_parenthesis close_parenthesis\n        \n        subroutines : sub procedure id inside_logic return subroutines\n        subroutines : sub function id open_parenthesis close_parenthesis inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis parameters close_parenthesis inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis close_parenthesis as variable_type inside_logic end sub subroutines\n        subroutines : sub function id open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub subroutines\n        |\n        \n        parameters : variable\n        parameters : parameters comma parameters\n        \n        functions : id open_parenthesis close_parenthesis\n        functions : id open_parenthesis arguments close_parenthesis\n        \n        arguments : ByVal value\n        arguments : ByRef id\n        arguments : arguments comma arguments\n        \n        read_or_write : print\n        read_or_write : read\n        \n        print : dunkelPrint multiple_print\n        print : dunkelPrint open_parenthesis multiple_print close_parenthesis\n        \n        multiple_print : string\n        multiple_print : value\n        multiple_print : multiple_print comma multiple_print\n        \n        read : dunkelRead multiple_read\n        read : dunkelRead string comma multiple_read\n        \n        multiple_read : ids_access\n        multiple_read : multiple_read comma multiple_read\n        '
    
_lr_action_items = {'end':([0,2,3,4,5,6,7,10,15,16,20,21,22,23,24,30,31,33,34,35,36,37,38,39,40,41,43,44,49,72,73,74,75,100,101,102,103,104,109,110,124,128,132,138,141,142,146,148,152,154,155,162,164,165,171,173,174,181,],[-8,19,-8,-8,-8,-8,-8,-16,-71,-72,-3,-4,-5,-6,-7,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-9,-13,-14,-15,-77,-74,-46,-52,-66,-81,-79,-67,-49,-17,-8,-10,-18,153,-8,-50,-8,163,169,-8,-11,177,-19,-51,-12,]),'dim':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,130,132,138,141,142,148,149,151,152,154,164,165,173,174,181,],[8,8,8,8,8,8,-16,8,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,8,-77,-74,-46,-52,-66,-81,-79,8,-38,-67,-49,8,-17,8,-10,-18,8,8,8,-50,8,8,-11,-19,-51,-12,]),'if':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[10,10,10,10,10,10,-16,10,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,10,-77,-74,-46,-52,-66,-81,-79,10,-38,-67,-49,-17,10,-10,-18,10,10,-50,10,10,-11,-19,-51,-12,]),'while':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[11,11,11,11,11,11,-16,11,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,11,-77,-74,-46,-52,-66,-81,-79,11,-38,-67,-49,-17,11,-10,-18,11,11,-50,11,11,-11,-19,-51,-12,]),'do':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[12,12,12,12,12,12,-16,12,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,12,-77,-74,-46,-52,-66,-81,-79,12,-38,-67,-49,-17,12,-10,-18,12,12,-50,12,12,-11,-19,-51,-12,]),'for':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[13,13,13,13,13,13,-16,13,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,13,-77,-74,-46,-52,-66,-81,-79,13,-38,-67,-49,-17,13,-10,-18,13,13,-50,13,13,-11,-19,-51,-12,]),'gosub':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[14,14,14,14,14,14,-16,14,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,14,-77,-74,-46,-52,-66,-81,-79,14,-38,-67,-49,-17,14,-10,-18,14,14,-50,14,14,-11,-19,-51,-12,]),'id':([0,3,4,5,6,7,8,10,12,13,14,15,16,17,18,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,49,50,54,57,58,59,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,106,107,109,110,111,119,122,123,124,128,132,136,138,141,142,143,148,151,152,154,160,164,165,166,173,174,181,],[9,9,9,9,9,9,25,-16,9,29,30,-71,-72,40,44,40,-56,-73,64,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,44,-57,64,-37,40,40,64,40,44,44,111,112,-9,-13,-14,-15,9,40,-24,-25,-26,-27,-28,-29,-30,-31,-32,40,-27,-28,40,-39,-40,-41,-42,-43,40,40,-77,-74,-46,-52,-66,40,127,-81,-79,9,-38,40,40,-67,-49,-17,40,9,-10,-18,40,9,9,-50,9,40,9,-11,173,-19,-51,-12,]),'dunkelPrint':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[17,17,17,17,17,17,-16,17,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,17,-77,-74,-46,-52,-66,-81,-79,17,-38,-67,-49,-17,17,-10,-18,17,17,-50,17,17,-11,-19,-51,-12,]),'dunkelRead':([0,3,4,5,6,7,10,12,15,16,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,76,100,101,102,103,104,109,110,111,119,124,128,132,138,141,142,148,151,152,154,164,165,173,174,181,],[18,18,18,18,18,18,-16,18,-71,-72,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,18,-77,-74,-46,-52,-66,-81,-79,18,-38,-67,-49,-17,18,-10,-18,18,18,-50,18,18,-11,-19,-51,-12,]),'$end':([1,19,46,137,145,161,168,170,175,176,179,180,182,],[0,-1,-2,-63,-58,-63,-59,-63,-63,-60,-61,-63,-62,]),'loop':([3,4,5,6,7,10,12,15,16,20,21,22,23,24,28,30,31,33,34,35,36,37,38,39,40,41,43,44,49,72,73,74,75,100,101,102,103,104,109,110,124,128,132,141,142,152,165,173,174,181,],[-8,-8,-8,-8,-8,-16,-8,-71,-72,-3,-4,-5,-6,-7,56,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-9,-13,-14,-15,-77,-74,-46,-52,-66,-81,-79,-67,-49,-17,-10,-18,-50,-11,-19,-51,-12,]),'wend':([3,4,5,6,7,10,15,16,20,21,22,23,24,30,31,33,34,35,36,37,38,39,40,41,43,44,49,72,73,74,75,76,100,101,102,103,104,109,110,114,124,128,132,141,142,152,165,173,174,181,],[-8,-8,-8,-8,-8,-16,-71,-72,-3,-4,-5,-6,-7,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-9,-13,-14,-15,-8,-77,-74,-46,-52,-66,-81,-79,132,-67,-49,-17,-10,-18,-50,-11,-19,-51,-12,]),'return':([3,4,5,6,7,10,15,16,20,21,22,23,24,30,31,33,34,35,36,37,38,39,40,41,43,44,49,72,73,74,75,100,101,102,103,104,109,110,111,124,128,129,132,141,142,152,165,173,174,181,],[-8,-8,-8,-8,-8,-16,-71,-72,-3,-4,-5,-6,-7,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-9,-13,-14,-15,-77,-74,-46,-52,-66,-81,-79,-8,-67,-49,137,-17,-10,-18,-50,-11,-19,-51,-12,]),'next':([3,4,5,6,7,10,15,16,20,21,22,23,24,30,31,33,34,35,36,37,38,39,40,41,43,44,49,54,72,73,74,75,100,101,102,103,104,109,110,119,124,128,132,141,142,151,152,159,165,173,174,181,],[-8,-8,-8,-8,-8,-16,-71,-72,-3,-4,-5,-6,-7,-56,-73,-75,-76,-44,-45,-47,-53,-54,-48,-78,-80,-48,-57,-37,-9,-13,-14,-15,-77,-74,-46,-52,-66,-81,-79,-38,-67,-49,-17,-10,-18,-8,-50,166,-11,-19,-51,-12,]),'open_parenthesis':([9,11,17,18,27,32,40,45,50,57,58,59,64,66,67,68,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,112,122,123,136,143,160,],[26,27,32,45,50,59,65,45,59,50,50,59,65,50,45,45,50,-24,-25,-26,-27,-28,-29,-30,-31,-32,50,-27,-28,50,-39,-40,-41,-42,-43,50,50,122,50,130,50,50,50,50,50,]),'string':([17,18,32,58,],[33,42,33,33,]),'word_value':([17,27,32,50,57,58,59,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,113,122,123,136,143,150,160,172,],[38,38,38,38,38,38,38,38,38,-24,-25,-26,-27,-28,-29,-30,-31,-32,38,-27,-28,38,-39,-40,-41,-42,-43,38,38,38,131,38,38,38,38,158,38,178,]),'float_value':([17,27,32,50,57,58,59,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,122,123,136,143,160,],[39,39,39,39,39,39,39,39,39,-24,-25,-26,-27,-28,-29,-30,-31,-32,39,-27,-28,39,-39,-40,-41,-42,-43,39,39,39,39,39,39,39,39,]),'sub':([19,137,153,161,163,169,170,175,177,180,],[47,47,161,47,170,175,47,47,180,47,]),'as':([25,138,148,],[48,147,156,]),'close_parenthesis':([26,33,34,35,36,37,38,39,40,44,51,52,53,54,60,61,62,63,64,65,69,72,73,74,75,100,102,103,104,105,115,116,117,118,119,120,121,124,126,127,128,130,133,135,139,140,141,152,157,165,174,181,],[49,-75,-76,-44,-45,-47,-53,-54,-48,-48,76,-20,-21,-37,101,102,103,-37,-48,104,103,-9,-13,-14,-15,-77,-46,-52,-66,124,-23,-22,-33,-34,-38,-35,-36,-67,-68,-69,-49,138,142,-70,148,-64,-10,-50,-65,-11,-51,-12,]),'bool_value':([27,77,78,79,80,81,82,83,84,85,86,88,89,122,],[55,55,-24,-25,-26,-27,-28,-29,-30,-31,-32,117,118,55,]),'equals':([29,],[57,]),'comma':([31,33,34,35,36,37,38,39,40,41,42,43,44,60,62,63,64,72,73,74,75,100,102,103,104,105,109,110,124,126,127,128,135,139,140,141,152,157,165,174,181,],[58,-75,-76,-44,-45,-47,-53,-54,-48,67,68,-80,-48,58,-47,-76,-48,-9,-13,-14,-15,58,-46,-52,-66,125,67,67,-67,-68,-69,-49,125,149,-64,-10,-50,149,-11,-51,-12,]),'sum':([35,36,37,38,39,40,54,62,63,64,102,103,104,124,128,152,174,],[-44,-45,-47,-53,-54,-48,91,-47,91,-48,-46,-52,-66,-67,-49,-50,-51,]),'substraction':([35,36,37,38,39,40,54,62,63,64,102,103,104,124,128,152,174,],[-44,-45,-47,-53,-54,-48,92,-47,92,-48,-46,-52,-66,-67,-49,-50,-51,]),'multiplication':([35,36,37,38,39,40,54,62,63,64,102,103,104,124,128,152,174,],[-44,-45,-47,-53,-54,-48,93,-47,93,-48,-46,-52,-66,-67,-49,-50,-51,]),'division':([35,36,37,38,39,40,54,62,63,64,102,103,104,124,128,152,174,],[-44,-45,-47,-53,-54,-48,94,-47,94,-48,-46,-52,-66,-67,-49,-50,-51,]),'exponent':([35,36,37,38,39,40,54,62,63,64,102,103,104,124,128,152,174,],[-44,-45,-47,-53,-54,-48,95,-47,95,-48,-46,-52,-66,-67,-49,-50,-51,]),'is_equal':([35,36,37,38,39,40,51,52,53,54,55,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,81,88,-21,-37,96,-46,-52,-66,81,-22,-33,-34,-38,-35,-36,-67,-49,81,-50,-51,]),'is_not_equal':([35,36,37,38,39,40,51,52,53,54,55,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,82,89,-21,-37,97,-46,-52,-66,82,-22,-33,-34,-38,-35,-36,-67,-49,82,-50,-51,]),'and':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,78,78,-21,-37,-46,-52,-66,78,-22,-33,-34,-38,-35,-36,-67,-49,78,-50,-51,]),'or':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,79,79,-21,-37,-46,-52,-66,79,-22,-33,-34,-38,-35,-36,-67,-49,79,-50,-51,]),'not':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,80,80,-21,-37,-46,-52,-66,80,-22,-33,-34,-38,-35,-36,-67,-49,80,-50,-51,]),'greater_than':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,83,83,-21,-37,-46,-52,-66,83,-22,-33,-34,-38,-35,-36,-67,-49,83,-50,-51,]),'greater_or_equal_than':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,84,84,-21,-37,-46,-52,-66,84,-22,-33,-34,-38,-35,-36,-67,-49,84,-50,-51,]),'less_than':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,85,85,-21,-37,-46,-52,-66,85,-22,-33,-34,-38,-35,-36,-67,-49,85,-50,-51,]),'less_or_equal_than':([35,36,37,38,39,40,51,52,53,54,102,103,104,115,116,117,118,119,120,121,124,128,133,152,174,],[-44,-45,-47,-53,-54,-48,86,86,-21,-37,-46,-52,-66,86,-22,-33,-34,-38,-35,-36,-67,-49,86,-50,-51,]),'to':([35,36,37,38,39,40,54,99,102,103,104,119,124,128,152,174,],[-44,-45,-47,-53,-54,-48,-37,123,-46,-52,-66,-38,-67,-49,-50,-51,]),'close_brackets':([35,36,37,38,39,40,54,102,103,104,108,119,124,128,131,144,152,158,167,174,178,],[-44,-45,-47,-53,-54,-48,-37,-46,-52,-66,128,-38,-67,-49,141,152,-50,165,174,-51,181,]),'step':([35,36,37,38,39,40,54,102,103,104,119,124,128,134,152,174,],[-44,-45,-47,-53,-54,-48,-37,-46,-52,-66,-38,-67,-49,143,-50,-51,]),'open_brackets':([40,44,64,72,73,74,75,128,141,152,165,],[66,66,66,113,-13,-14,-15,136,150,160,172,]),'procedure':([47,],[70,]),'function':([47,],[71,]),'word':([48,147,156,],[73,73,73,]),'float':([48,147,156,],[74,74,74,]),'bool':([48,147,156,],[75,75,75,]),'until':([56,],[98,]),'ByVal':([65,125,],[106,106,]),'ByRef':([65,125,],[107,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'inside_logic':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[2,20,21,22,23,24,28,114,129,146,155,159,162,171,]),'variable':([0,3,4,5,6,7,12,76,111,130,138,148,149,151,154,164,],[3,3,3,3,3,3,3,3,3,140,3,3,140,3,3,3,]),'conditions':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loops':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'calls':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'read_or_write':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'print':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'read':([0,3,4,5,6,7,12,76,111,138,148,151,154,164,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'multiple_print':([17,32,58,],[31,60,100,]),'value':([17,27,32,50,57,58,59,66,77,87,90,96,97,106,122,123,136,143,160,],[34,54,63,54,54,34,54,54,54,54,119,54,54,126,54,54,54,54,54,]),'real_value':([17,27,32,50,57,58,59,66,77,87,90,96,97,106,122,123,136,143,160,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'functions':([17,27,32,50,57,58,59,66,77,87,90,96,97,106,122,123,136,143,160,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ids_access':([17,18,27,32,45,50,57,58,59,66,67,68,77,87,90,96,97,106,122,123,136,143,160,],[37,43,37,62,69,62,37,37,62,37,43,43,37,37,37,37,37,37,37,37,37,37,37,]),'multiple_read':([18,67,68,],[41,109,110,]),'subroutines':([19,137,161,170,175,180,],[46,145,168,176,179,182,]),'logic_expression':([27,77,122,],[51,115,133,]),'arithmetic_expression':([27,32,50,57,59,66,77,87,96,97,122,123,136,143,160,],[52,61,61,99,61,108,52,116,120,121,52,134,144,151,167,]),'compared_to_bool':([27,77,122,],[53,53,53,]),'variable_type':([48,147,156,],[72,154,164,]),'logic_operand':([51,52,115,133,],[77,87,77,77,]),'arithmetic_operand':([54,63,],[90,90,]),'arguments':([65,125,],[105,135,]),'parameters':([130,149,],[139,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> inside_logic end','program',2,'p_program','Parser.py',16),
  ('program -> inside_logic end subroutines','program',3,'p_program','Parser.py',17),
  ('inside_logic -> variable inside_logic','inside_logic',2,'p_inside_logic','Parser.py',23),
  ('inside_logic -> conditions inside_logic','inside_logic',2,'p_inside_logic','Parser.py',24),
  ('inside_logic -> loops inside_logic','inside_logic',2,'p_inside_logic','Parser.py',25),
  ('inside_logic -> calls inside_logic','inside_logic',2,'p_inside_logic','Parser.py',26),
  ('inside_logic -> read_or_write inside_logic','inside_logic',2,'p_inside_logic','Parser.py',27),
  ('inside_logic -> <empty>','inside_logic',0,'p_inside_logic','Parser.py',28),
  ('variable -> dim id as variable_type','variable',4,'p_variable','Parser.py',33),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets','variable',7,'p_variable','Parser.py',34),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',10,'p_variable','Parser.py',35),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',13,'p_variable','Parser.py',36),
  ('variable_type -> word','variable_type',1,'p_variable_type','Parser.py',41),
  ('variable_type -> float','variable_type',1,'p_variable_type','Parser.py',42),
  ('variable_type -> bool','variable_type',1,'p_variable_type','Parser.py',43),
  ('conditions -> if','conditions',1,'p_conditions','Parser.py',48),
  ('loops -> while open_parenthesis logic_expression close_parenthesis inside_logic wend','loops',6,'p_loops','Parser.py',53),
  ('loops -> do inside_logic loop until open_parenthesis logic_expression close_parenthesis','loops',7,'p_loops','Parser.py',54),
  ('loops -> for id equals arithmetic_expression to arithmetic_expression step arithmetic_expression inside_logic next id','loops',11,'p_loops','Parser.py',55),
  ('logic_expression -> arithmetic_expression','logic_expression',1,'p_logic_expression','Parser.py',60),
  ('logic_expression -> compared_to_bool','logic_expression',1,'p_logic_expression','Parser.py',61),
  ('logic_expression -> arithmetic_expression logic_operand arithmetic_expression','logic_expression',3,'p_logic_expression','Parser.py',62),
  ('logic_expression -> logic_expression logic_operand logic_expression','logic_expression',3,'p_logic_expression','Parser.py',63),
  ('logic_operand -> and','logic_operand',1,'p_logic_operand','Parser.py',68),
  ('logic_operand -> or','logic_operand',1,'p_logic_operand','Parser.py',69),
  ('logic_operand -> not','logic_operand',1,'p_logic_operand','Parser.py',70),
  ('logic_operand -> is_equal','logic_operand',1,'p_logic_operand','Parser.py',71),
  ('logic_operand -> is_not_equal','logic_operand',1,'p_logic_operand','Parser.py',72),
  ('logic_operand -> greater_than','logic_operand',1,'p_logic_operand','Parser.py',73),
  ('logic_operand -> greater_or_equal_than','logic_operand',1,'p_logic_operand','Parser.py',74),
  ('logic_operand -> less_than','logic_operand',1,'p_logic_operand','Parser.py',75),
  ('logic_operand -> less_or_equal_than','logic_operand',1,'p_logic_operand','Parser.py',76),
  ('compared_to_bool -> arithmetic_expression is_equal bool_value','compared_to_bool',3,'p_compared_to_bool','Parser.py',81),
  ('compared_to_bool -> arithmetic_expression is_not_equal bool_value','compared_to_bool',3,'p_compared_to_bool','Parser.py',82),
  ('compared_to_bool -> bool_value is_equal arithmetic_expression','compared_to_bool',3,'p_compared_to_bool','Parser.py',83),
  ('compared_to_bool -> bool_value is_not_equal arithmetic_expression','compared_to_bool',3,'p_compared_to_bool','Parser.py',84),
  ('arithmetic_expression -> value','arithmetic_expression',1,'p_arithmetic_expression','Parser.py',89),
  ('arithmetic_expression -> value arithmetic_operand value','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',90),
  ('arithmetic_operand -> sum','arithmetic_operand',1,'p_arithmetic_operand','Parser.py',95),
  ('arithmetic_operand -> substraction','arithmetic_operand',1,'p_arithmetic_operand','Parser.py',96),
  ('arithmetic_operand -> multiplication','arithmetic_operand',1,'p_arithmetic_operand','Parser.py',97),
  ('arithmetic_operand -> division','arithmetic_operand',1,'p_arithmetic_operand','Parser.py',98),
  ('arithmetic_operand -> exponent','arithmetic_operand',1,'p_arithmetic_operand','Parser.py',99),
  ('value -> real_value','value',1,'p_value','Parser.py',104),
  ('value -> functions','value',1,'p_value','Parser.py',105),
  ('value -> open_parenthesis arithmetic_expression close_parenthesis','value',3,'p_value','Parser.py',106),
  ('value -> ids_access','value',1,'p_value','Parser.py',107),
  ('ids_access -> id','ids_access',1,'p_ids_access','Parser.py',112),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets','ids_access',4,'p_ids_access','Parser.py',113),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets','ids_access',7,'p_ids_access','Parser.py',114),
  ('ids_access -> id open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets','ids_access',10,'p_ids_access','Parser.py',115),
  ('ids_access -> open_parenthesis ids_access close_parenthesis','ids_access',3,'p_ids_access','Parser.py',116),
  ('real_value -> word_value','real_value',1,'p_real_value','Parser.py',121),
  ('real_value -> float_value','real_value',1,'p_real_value','Parser.py',122),
  ('real_value -> id','real_value',1,'p_real_value','Parser.py',123),
  ('calls -> gosub id','calls',2,'p_calls','Parser.py',128),
  ('calls -> id open_parenthesis close_parenthesis','calls',3,'p_calls','Parser.py',129),
  ('subroutines -> sub procedure id inside_logic return subroutines','subroutines',6,'p_subroutines','Parser.py',134),
  ('subroutines -> sub function id open_parenthesis close_parenthesis inside_logic end sub subroutines','subroutines',9,'p_subroutines','Parser.py',135),
  ('subroutines -> sub function id open_parenthesis parameters close_parenthesis inside_logic end sub subroutines','subroutines',10,'p_subroutines','Parser.py',136),
  ('subroutines -> sub function id open_parenthesis close_parenthesis as variable_type inside_logic end sub subroutines','subroutines',11,'p_subroutines','Parser.py',137),
  ('subroutines -> sub function id open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub subroutines','subroutines',12,'p_subroutines','Parser.py',138),
  ('subroutines -> <empty>','subroutines',0,'p_subroutines','Parser.py',139),
  ('parameters -> variable','parameters',1,'p_parameters','Parser.py',144),
  ('parameters -> parameters comma parameters','parameters',3,'p_parameters','Parser.py',145),
  ('functions -> id open_parenthesis close_parenthesis','functions',3,'p_functions','Parser.py',150),
  ('functions -> id open_parenthesis arguments close_parenthesis','functions',4,'p_functions','Parser.py',151),
  ('arguments -> ByVal value','arguments',2,'p_arguments','Parser.py',156),
  ('arguments -> ByRef id','arguments',2,'p_arguments','Parser.py',157),
  ('arguments -> arguments comma arguments','arguments',3,'p_arguments','Parser.py',158),
  ('read_or_write -> print','read_or_write',1,'p_read_or_write','Parser.py',163),
  ('read_or_write -> read','read_or_write',1,'p_read_or_write','Parser.py',164),
  ('print -> dunkelPrint multiple_print','print',2,'p_print','Parser.py',169),
  ('print -> dunkelPrint open_parenthesis multiple_print close_parenthesis','print',4,'p_print','Parser.py',170),
  ('multiple_print -> string','multiple_print',1,'p_multiple_print','Parser.py',175),
  ('multiple_print -> value','multiple_print',1,'p_multiple_print','Parser.py',176),
  ('multiple_print -> multiple_print comma multiple_print','multiple_print',3,'p_multiple_print','Parser.py',177),
  ('read -> dunkelRead multiple_read','read',2,'p_read','Parser.py',182),
  ('read -> dunkelRead string comma multiple_read','read',4,'p_read','Parser.py',183),
  ('multiple_read -> ids_access','multiple_read',1,'p_multiple_read','Parser.py',188),
  ('multiple_read -> multiple_read comma multiple_read','multiple_read',3,'p_multiple_read','Parser.py',189),
]
