
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ByRef ByVal and as bool bool_value close_braces close_brackets close_parenthesis colon comma dim division do dunkelCls dunkelPrint dunkelRead else elsif end end_if equals exit exponent false float float_value for function gosub goto greater_or_equal_than greater_than id if is_equal is_not_equal less_or_equal_than less_than let loop multiplication next not open_braces open_brackets open_parenthesis or procedure return semicolon step string sub substraction sum then to true until wend while word word_value\n        program : inside_logic end\n        program : inside_logic end subroutines\n        \n        inside_logic : variable inside_logic\n        inside_logic : conditions inside_logic\n        inside_logic : loops inside_logic\n        inside_logic : calls inside_logic\n        inside_logic : read_or_write inside_logic\n        inside_logic : assign inside_logic\n        |\n        \n        variable : dim id as variable_type\n        variable : dim id as variable_type open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets\n        variable : dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets\n        \n        variable_type : word\n        variable_type : float\n        variable_type : bool\n        \n        base_if : if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        conditions : base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs end if ACTION_FILL_JUMP_END_IF\n        conditions : base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF\n        \n        else_ifs : elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        else_ifs : else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF\n        \n        loops : while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO\n        loops : do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE \n        loops : for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO\n        \n        logic_expression : arithmetic_expression        \n        logic_expression : logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET\n        logic_expression : open_parenthesis logic_expression close_parenthesis\n        \n        logic_operator : and ACTION_ADD_OPERATOR\n        logic_operator : or ACTION_ADD_OPERATOR\n        logic_operator : is_equal ACTION_ADD_OPERATOR\n        logic_operator : is_not_equal ACTION_ADD_OPERATOR\n        logic_operator : greater_than ACTION_ADD_OPERATOR\n        logic_operator : greater_or_equal_than ACTION_ADD_OPERATOR\n        logic_operator : less_than ACTION_ADD_OPERATOR\n        logic_operator : less_or_equal_than ACTION_ADD_OPERATOR\n        \n        arithmetic_expression : value\n        arithmetic_expression : arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET\n        arithmetic_expression : open_parenthesis arithmetic_expression close_parenthesis\n        \n        arithmetic_operator : sum ACTION_ADD_OPERATOR\n        arithmetic_operator : substraction ACTION_ADD_OPERATOR\n        arithmetic_operator : multiplication ACTION_ADD_OPERATOR\n        arithmetic_operator : division ACTION_ADD_OPERATOR\n        arithmetic_operator : exponent ACTION_ADD_OPERATOR\n        \n        possible_values : real_value\n        possible_values : functions\n        possible_values : ids_access\n        \n        value : possible_values\n        value : not possible_values ACTION_ADD_NOT_OPERAND\n        value : open_parenthesis value close_parenthesis\n        \n        ids_access : id ACTION_ADD_VAR_VALUE\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND\n        ids_access : id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND\n        ids_access : open_parenthesis ids_access close_parenthesis\n        \n        real_value : word_value ACTION_ADD_WORD_VALUE\n        real_value : float_value ACTION_ADD_FLOAT_VALUE\n        real_value : bool_value ACTION_ADD_BOOL_VALUE\n        real_value : id ACTION_ADD_VAR_VALUE\n        \n        calls : gosub id ACTION_ADD_SUBROUTINE_CALL\n        calls : functions\n        \n        subroutines : sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines \n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        subroutines : sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines\n        |\n        \n        assign : let ids_access equals logic_expression ACTION_ASSIGN_VALUE\n        assign : let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE\n        \n        parameters : variable\n        parameters : parameters comma parameters\n        \n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis\n        functions : id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis\n        \n        arguments : ByVal value ACTION_ADD_FUNCTION_OPERAND\n        arguments : ByRef id ACTION_ADD_FUNCTION_OPERAND\n        arguments : arguments comma arguments\n        \n        read_or_write : print\n        read_or_write : read\n        read_or_write : dunkelCls ACTION_ADD_CLS_QUADRUPLET\n        \n        print : dunkelPrint multiple_print ACTION_CONSOLE_WRITE\n        print : dunkelPrint open_parenthesis multiple_print close_parenthesis ACTION_CONSOLE_WRITE\n        \n        multiple_print : string\n        multiple_print : arithmetic_expression\n        multiple_print : multiple_print comma multiple_print\n        \n        read : dunkelRead possible_read ACTION_CONSOLE_READ\n        \n        possible_read : string comma multiple_read\n        possible_read : multiple_read\n        \n        multiple_read : ids_access \n        multiple_read : multiple_read comma ids_access\n        \n        ACTION_ADD_FOR_VALUE :\n        \n        ACTION_ADD_VAR_VALUE :\n        \n        ACTION_ADD_WORD_VALUE :\n        \n        ACTION_ADD_FLOAT_VALUE :\n        \n        ACTION_ADD_BOOL_VALUE :\n        \n        ACTION_ADD_OPERATOR :\n        \n        ACTION_ADD_FUNCTION_OPERAND :\n        \n        ACTION_ADD_FUNCTION_CALL :\n        \n        ACTION_ADD_SUBROUTINE_CALL :\n        \n        ACTION_ADD_FUNCTION :\n        \n        ACTION_ADD_PROCEDURE :\n        \n        ACTION_ADD_END_FUNCTION :\n        \n        ACTION_ASSIGN_VALUE : \n        \n        ACTION_ADD_PARAMETERS :\n        \n        ACTION_ADD_NOT_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET :\n        \n        ACTION_ADD_ONE_DIM_OPERAND :\n        \n        ACTION_ADD_TWO_DIM_OPERAND :\n        \n        ACTION_ADD_THREE_DIM_OPERAND :\n        \n        ACTION_ADD_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_NEW_IF :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_END_IF  :\n        \n        ACTION_FILL_JUMP :\n        \n        ACTION_FILL_JUMP_END_IF :\n        \n        ACTION_FOR_JUMP_BACK :\n        \n        ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP :\n        \n        ACTION_FOR_INCREMENT :\n        \n        ACTION_FOR_GOTO :\n        \n        ACTION_WHILE_GOTO :\n        \n        ACTION_DO_WHILE_INDEX :\n        \n        ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE :\n        \n        ACTION_CONSOLE_WRITE :\n        \n        ACTION_CONSOLE_READ :\n        \n        ACTION_ADD_CLS_QUADRUPLET :\n        '
    
_lr_action_items = {'end':([0,2,3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,33,34,35,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,117,118,119,137,138,140,141,143,144,145,147,154,155,156,164,166,167,170,171,172,184,185,187,188,193,197,201,202,206,209,210,211,214,215,219,221,225,227,228,229,230,234,236,239,240,241,242,244,247,248,251,252,253,256,258,260,262,268,271,276,278,287,288,],[-9,24,-9,-9,-9,-9,-9,-9,-114,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,68,-114,70,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-9,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,165,-115,-9,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,198,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-9,-21,-9,-113,-24,-122,246,-9,-9,-113,-17,-25,-108,-9,259,-12,-113,-22,-54,266,-9,-23,275,-109,-13,-55,-119,-26,]),'dim':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,208,209,210,211,215,219,221,225,227,229,230,236,237,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[9,9,9,9,9,9,9,-121,-62,-78,-79,-125,-114,9,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,9,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,9,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,9,-69,-70,-82,-39,9,-74,-115,9,-28,-107,9,-11,-19,-115,-120,-53,9,-21,9,-24,-122,9,9,9,-25,-108,9,-12,-54,9,-118,-109,-13,9,-55,-119,-26,]),'while':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[13,13,13,13,13,13,13,-121,-62,-78,-79,-125,-114,13,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,13,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,13,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,13,-69,-70,-82,-39,13,-74,-115,13,-28,-107,-11,-19,-115,-120,-53,13,-21,13,-24,-122,13,13,-25,-108,13,-12,-54,13,-118,-109,-13,13,-55,-119,-26,]),'do':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[14,14,14,14,14,14,14,-121,-62,-78,-79,-125,-114,14,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,14,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,14,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,14,-69,-70,-82,-39,14,-74,-115,14,-28,-107,-11,-19,-115,-120,-53,14,-21,14,-24,-122,14,14,-25,-108,14,-12,-54,14,-118,-109,-13,14,-55,-119,-26,]),'for':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[15,15,15,15,15,15,15,-121,-62,-78,-79,-125,-114,15,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,15,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,15,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,15,-69,-70,-82,-39,15,-74,-115,15,-28,-107,-11,-19,-115,-120,-53,15,-21,15,-24,-122,15,15,-25,-108,15,-12,-54,15,-118,-109,-13,15,-55,-119,-26,]),'gosub':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[16,16,16,16,16,16,16,-121,-62,-78,-79,-125,-114,16,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,16,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,16,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,16,-69,-70,-82,-39,16,-74,-115,16,-28,-107,-11,-19,-115,-120,-53,16,-21,16,-24,-122,16,16,-25,-108,16,-12,-54,16,-118,-109,-13,16,-55,-119,-26,]),'dunkelCls':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[20,20,20,20,20,20,20,-121,-62,-78,-79,-125,-114,20,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,20,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,20,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,20,-69,-70,-82,-39,20,-74,-115,20,-28,-107,-11,-19,-115,-120,-53,20,-21,20,-24,-122,20,20,-25,-108,20,-12,-54,20,-118,-109,-13,20,-55,-119,-26,]),'let':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[21,21,21,21,21,21,21,-121,-62,-78,-79,-125,-114,21,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,21,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,21,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,21,-69,-70,-82,-39,21,-74,-115,21,-28,-107,-11,-19,-115,-120,-53,21,-21,21,-24,-122,21,21,-25,-108,21,-12,-54,21,-118,-109,-13,21,-55,-119,-26,]),'if':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,68,69,70,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,165,166,170,171,172,181,184,185,187,188,190,193,197,198,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[12,12,12,12,12,12,12,-121,-62,-78,-79,-125,-114,12,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,116,12,118,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,12,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,197,-20,-29,-110,-106,12,-69,-70,-82,-39,12,-74,-115,211,12,-28,-107,-11,-19,-115,-120,-53,12,-21,12,-24,-122,12,12,-25,-108,12,-12,-54,12,-118,-109,-13,12,-55,-119,-26,]),'id':([0,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,34,37,38,39,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,69,71,74,76,80,81,82,84,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,119,121,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,143,144,145,147,148,149,150,151,152,153,154,155,156,157,164,166,168,170,171,172,173,174,175,176,177,178,179,180,181,184,185,187,188,190,193,197,201,202,204,206,209,210,211,215,217,218,219,221,225,227,229,230,231,236,239,242,244,247,251,255,256,260,263,270,271,276,277,278,285,287,288,],[10,10,10,10,10,10,10,31,-121,40,41,-62,-78,-79,-125,44,59,44,-114,59,59,10,-99,-80,-92,44,-123,91,-83,-84,-38,-49,59,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,10,-114,91,-27,-61,59,-52,-81,59,91,59,-96,-96,-96,-96,-96,-105,-57,-58,-59,-52,-86,44,44,157,158,-10,-14,-15,-16,-73,59,163,-115,-115,10,59,59,-96,-96,-96,-96,-96,-96,-96,-96,-111,59,-103,-27,59,-56,-85,-123,-40,-51,-106,91,-41,-42,-43,-44,-45,-50,-87,-90,-101,-18,-20,59,-29,-110,-106,-30,-31,-32,-33,-34,-35,-36,-37,10,-69,-70,-82,-39,10,-74,-115,10,-28,59,-107,-11,-19,-115,-120,-116,59,-53,10,-21,10,-24,-122,59,10,10,-25,-108,10,-12,59,-54,10,59,-118,-109,-13,10,-55,287,-119,-26,]),'dunkelPrint':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[22,22,22,22,22,22,22,-121,-62,-78,-79,-125,-114,22,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,22,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,22,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,22,-69,-70,-82,-39,22,-74,-115,22,-28,-107,-11,-19,-115,-120,-53,22,-21,22,-24,-122,22,22,-25,-108,22,-12,-54,22,-118,-109,-13,22,-55,-119,-26,]),'dunkelRead':([0,3,4,5,6,7,8,14,17,18,19,20,34,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,69,71,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,119,134,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,171,172,181,184,185,187,188,190,193,197,201,202,206,209,210,211,215,219,221,225,227,229,230,236,239,242,244,247,251,256,260,270,271,276,277,278,287,288,],[23,23,23,23,23,23,23,-121,-62,-78,-79,-125,-114,23,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,23,-114,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,23,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-110,-106,23,-69,-70,-82,-39,23,-74,-115,23,-28,-107,-11,-19,-115,-120,-53,23,-21,23,-24,-122,23,23,-25,-108,23,-12,-54,23,-118,-109,-13,23,-55,-119,-26,]),'$end':([1,24,64,220,233,245,257,265,267,272,273,274,279,280,281,283,284,286,],[0,-1,-2,-102,-68,-63,-102,-68,-102,-64,-102,-68,-68,-65,-102,-66,-68,-67,]),'loop':([3,4,5,6,7,8,14,17,18,19,20,25,26,27,28,29,30,39,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,78,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,137,138,140,141,143,144,145,147,154,155,156,164,166,170,172,184,185,187,188,193,197,202,206,209,210,211,215,219,225,229,230,242,244,251,256,271,276,278,287,288,],[-9,-9,-9,-9,-9,-9,-121,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,-9,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,135,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-69,-70,-82,-39,-74,-115,-28,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'wend':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,134,137,138,140,141,143,144,145,147,154,155,156,164,166,170,172,181,184,185,187,188,193,197,202,203,206,209,210,211,215,219,225,229,230,242,244,251,256,271,276,278,287,288,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-111,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-9,-69,-70,-82,-39,-74,-115,-28,215,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'return':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,137,138,140,141,143,144,145,147,154,155,156,157,164,166,170,172,184,185,187,188,190,193,197,202,206,207,209,210,211,215,219,225,229,230,242,244,251,256,271,276,278,287,288,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-101,-18,-20,-29,-106,-69,-70,-82,-39,-9,-74,-115,-28,-107,220,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-109,-13,-55,-119,-26,]),'else':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,137,138,140,141,143,144,145,147,154,155,156,164,166,170,171,172,184,185,187,188,193,197,201,202,206,209,210,211,214,215,219,225,227,228,229,230,239,240,241,242,244,251,252,253,256,262,271,276,278,287,288,],[-9,-9,-9,-9,-9,-9,34,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,71,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-21,-9,-113,-24,-122,-9,-113,-17,-25,-108,-12,-113,-22,-54,-23,-109,-13,-55,-119,-26,]),'elsif':([3,4,5,6,7,8,11,17,18,19,20,25,26,27,28,29,30,35,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,137,138,140,141,143,144,145,147,154,155,156,164,166,170,171,172,184,185,187,188,193,197,201,202,206,209,210,211,214,215,219,225,227,228,229,230,239,240,241,242,244,251,252,253,256,262,271,276,278,287,288,],[-9,-9,-9,-9,-9,-9,36,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,72,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-110,-106,-69,-70,-82,-39,-74,-115,-9,-28,-107,-11,-19,-115,-112,-120,-53,-21,-9,-113,-24,-122,-9,-113,-17,-25,-108,-12,-113,-22,-54,-23,-109,-13,-55,-119,-26,]),'next':([3,4,5,6,7,8,17,18,19,20,25,26,27,28,29,30,41,42,44,46,48,49,50,51,53,54,55,56,57,58,59,60,62,63,76,80,82,84,98,99,100,101,102,103,108,109,110,111,112,116,118,137,138,140,141,143,144,145,147,154,155,156,164,166,170,172,184,185,187,188,193,197,202,206,209,210,211,215,219,225,229,230,242,244,251,256,270,271,276,277,278,282,287,288,],[-9,-9,-9,-9,-9,-9,-62,-78,-79,-125,-3,-4,-5,-6,-7,-8,-99,-80,-92,-123,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,-124,-88,-89,-27,-61,-52,-81,-105,-57,-58,-59,-52,-86,-10,-14,-15,-16,-73,-115,-115,-103,-27,-56,-85,-123,-40,-51,-106,-50,-87,-90,-18,-20,-29,-106,-69,-70,-82,-39,-74,-115,-28,-107,-11,-19,-115,-120,-53,-21,-24,-122,-25,-108,-12,-54,-118,-109,-13,-9,-55,285,-119,-26,]),'open_parenthesis':([10,12,13,21,22,23,32,36,37,38,45,47,52,59,72,73,74,81,85,86,91,92,93,94,95,96,97,104,105,114,120,121,125,126,127,128,129,130,131,132,133,136,139,148,149,150,151,152,153,158,168,173,174,175,176,177,178,179,180,182,191,204,217,218,231,255,263,],[-98,37,38,45,47,45,67,-114,74,74,45,86,45,-98,-114,121,74,74,86,86,-98,148,-96,-96,-96,-96,-96,45,45,148,168,74,74,-96,-96,-96,-96,-96,-96,-96,-96,86,86,148,-41,-42,-43,-44,-45,-100,74,-30,-31,-32,-33,-34,-35,-36,-37,204,208,74,-116,86,86,86,86,]),'string':([22,23,47,85,],[48,61,48,48,]),'not':([22,37,38,47,74,81,85,86,92,93,94,95,96,97,114,121,125,126,127,128,129,130,131,132,133,136,139,148,149,150,151,152,153,168,173,174,175,176,177,178,179,180,204,217,218,231,255,263,],[52,52,52,52,52,52,52,52,52,-96,-96,-96,-96,-96,52,52,52,-96,-96,-96,-96,-96,-96,-96,-96,52,52,52,-41,-42,-43,-44,-45,52,-30,-31,-32,-33,-34,-35,-36,-37,52,-116,52,52,52,52,]),'word_value':([22,37,38,47,52,74,81,85,86,92,93,94,95,96,97,114,121,125,126,127,128,129,130,131,132,133,136,139,148,149,150,151,152,153,159,168,173,174,175,176,177,178,179,180,204,217,218,224,231,255,261,263,],[56,56,56,56,56,56,56,56,56,56,-96,-96,-96,-96,-96,56,56,56,-96,-96,-96,-96,-96,-96,-96,-96,56,56,56,-41,-42,-43,-44,-45,192,56,-30,-31,-32,-33,-34,-35,-36,-37,56,-116,56,238,56,56,269,56,]),'float_value':([22,37,38,47,52,74,81,85,86,92,93,94,95,96,97,114,121,125,126,127,128,129,130,131,132,133,136,139,148,149,150,151,152,153,168,173,174,175,176,177,178,179,180,204,217,218,231,255,263,],[57,57,57,57,57,57,57,57,57,57,-96,-96,-96,-96,-96,57,57,57,-96,-96,-96,-96,-96,-96,-96,-96,57,57,57,-41,-42,-43,-44,-45,57,-30,-31,-32,-33,-34,-35,-36,-37,57,-116,57,57,57,57,]),'bool_value':([22,37,38,47,52,74,81,85,86,92,93,94,95,96,97,114,121,125,126,127,128,129,130,131,132,133,136,139,148,149,150,151,152,153,168,173,174,175,176,177,178,179,180,204,217,218,231,255,263,],[58,58,58,58,58,58,58,58,58,58,-96,-96,-96,-96,-96,58,58,58,-96,-96,-96,-96,-96,-96,-96,-96,58,58,58,-41,-42,-43,-44,-45,58,-30,-31,-32,-33,-34,-35,-36,-37,58,-116,58,58,58,58,]),'sub':([24,220,233,246,257,259,265,266,267,273,274,275,279,281,284,],[65,-102,65,257,-102,267,65,273,-102,-102,65,281,65,-102,65,]),'as':([31,221,236,],[66,235,249,]),'equals':([40,43,44,79,82,140,206,219,244,256,271,278,],[-91,81,-92,136,-52,-56,-107,-53,-108,-54,-109,-55,]),'open_brackets':([44,59,82,91,102,108,109,110,111,146,206,209,244,251,],[-92,-92,139,-92,139,159,-14,-15,-16,139,218,224,255,261,]),'comma':([44,46,48,49,50,51,53,54,55,56,57,58,59,61,62,63,82,87,88,89,90,91,98,99,100,101,102,108,109,110,111,112,113,140,141,144,145,146,147,154,155,156,162,163,188,193,194,195,196,206,209,219,222,223,244,250,251,256,271,276,278,],[-92,85,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,104,105,-89,-52,85,-84,-38,-48,-92,-105,-57,-58,-59,-52,-10,-14,-15,-16,-73,161,-56,85,-40,-51,-52,-106,-50,105,-90,-97,-97,-39,-74,161,-75,-76,-107,-11,-53,237,-71,-108,237,-12,-54,-109,-13,-55,]),'close_parenthesis':([44,48,49,50,51,53,54,55,56,57,58,59,67,75,76,77,82,83,87,88,89,90,91,98,99,100,101,102,108,109,110,111,112,113,122,123,140,141,142,144,145,146,147,154,160,162,163,169,170,172,188,189,193,194,195,196,199,202,206,208,209,216,219,222,223,244,250,251,256,271,276,278,],[-92,-83,-84,-38,-49,-46,-47,-48,-93,-94,-95,-92,112,124,-27,134,-52,140,143,144,145,140,-92,-105,-57,-58,-59,-52,-10,-14,-15,-16,-73,-104,170,144,-56,-85,144,-40,-51,-52,-106,-50,193,-97,-97,200,-29,-106,-39,145,-74,-77,-75,-76,212,-28,-107,221,-11,230,-53,236,-71,-108,-72,-12,-54,-109,-13,-55,]),'sum':([49,50,51,53,54,55,56,57,58,59,76,88,89,90,91,98,99,100,101,102,112,123,138,140,142,144,145,146,147,154,183,186,188,193,206,219,232,243,244,256,264,270,271,278,],[93,-38,-49,-46,-47,-48,-93,-94,-95,-92,93,93,-38,-48,-92,-105,-57,-58,-59,-52,-73,93,93,-56,93,-40,-51,-52,-106,-50,93,93,-39,-74,-107,-53,93,93,-108,-54,93,93,-109,-55,]),'substraction':([49,50,51,53,54,55,56,57,58,59,76,88,89,90,91,98,99,100,101,102,112,123,138,140,142,144,145,146,147,154,183,186,188,193,206,219,232,243,244,256,264,270,271,278,],[94,-38,-49,-46,-47,-48,-93,-94,-95,-92,94,94,-38,-48,-92,-105,-57,-58,-59,-52,-73,94,94,-56,94,-40,-51,-52,-106,-50,94,94,-39,-74,-107,-53,94,94,-108,-54,94,94,-109,-55,]),'multiplication':([49,50,51,53,54,55,56,57,58,59,76,88,89,90,91,98,99,100,101,102,112,123,138,140,142,144,145,146,147,154,183,186,188,193,206,219,232,243,244,256,264,270,271,278,],[95,-38,-49,-46,-47,-48,-93,-94,-95,-92,95,95,-38,-48,-92,-105,-57,-58,-59,-52,-73,95,95,-56,95,-40,-51,-52,-106,-50,95,95,-39,-74,-107,-53,95,95,-108,-54,95,95,-109,-55,]),'division':([49,50,51,53,54,55,56,57,58,59,76,88,89,90,91,98,99,100,101,102,112,123,138,140,142,144,145,146,147,154,183,186,188,193,206,219,232,243,244,256,264,270,271,278,],[96,-38,-49,-46,-47,-48,-93,-94,-95,-92,96,96,-38,-48,-92,-105,-57,-58,-59,-52,-73,96,96,-56,96,-40,-51,-52,-106,-50,96,96,-39,-74,-107,-53,96,96,-108,-54,96,96,-109,-55,]),'exponent':([49,50,51,53,54,55,56,57,58,59,76,88,89,90,91,98,99,100,101,102,112,123,138,140,142,144,145,146,147,154,183,186,188,193,206,219,232,243,244,256,264,270,271,278,],[97,-38,-49,-46,-47,-48,-93,-94,-95,-92,97,97,-38,-48,-92,-105,-57,-58,-59,-52,-73,97,97,-56,97,-40,-51,-52,-106,-50,97,97,-39,-74,-107,-53,97,97,-108,-54,97,97,-109,-55,]),'and':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,126,-27,126,-38,-48,-92,-105,-57,-58,-59,-52,-73,126,-27,126,-27,-56,-40,-51,-52,-106,-50,126,-29,126,-39,-74,126,-28,-107,126,-53,-108,-54,-109,-55,]),'or':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,127,-27,127,-38,-48,-92,-105,-57,-58,-59,-52,-73,127,-27,127,-27,-56,-40,-51,-52,-106,-50,127,-29,127,-39,-74,127,-28,-107,127,-53,-108,-54,-109,-55,]),'is_equal':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,128,-27,128,-38,-48,-92,-105,-57,-58,-59,-52,-73,128,-27,128,-27,-56,-40,-51,-52,-106,-50,128,-29,128,-39,-74,128,-28,-107,128,-53,-108,-54,-109,-55,]),'is_not_equal':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,129,-27,129,-38,-48,-92,-105,-57,-58,-59,-52,-73,129,-27,129,-27,-56,-40,-51,-52,-106,-50,129,-29,129,-39,-74,129,-28,-107,129,-53,-108,-54,-109,-55,]),'greater_than':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,130,-27,130,-38,-48,-92,-105,-57,-58,-59,-52,-73,130,-27,130,-27,-56,-40,-51,-52,-106,-50,130,-29,130,-39,-74,130,-28,-107,130,-53,-108,-54,-109,-55,]),'greater_or_equal_than':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,131,-27,131,-38,-48,-92,-105,-57,-58,-59,-52,-73,131,-27,131,-27,-56,-40,-51,-52,-106,-50,131,-29,131,-39,-74,131,-28,-107,131,-53,-108,-54,-109,-55,]),'less_than':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,132,-27,132,-38,-48,-92,-105,-57,-58,-59,-52,-73,132,-27,132,-27,-56,-40,-51,-52,-106,-50,132,-29,132,-39,-74,132,-28,-107,132,-53,-108,-54,-109,-55,]),'less_or_equal_than':([50,51,53,54,55,56,57,58,59,75,76,77,89,90,91,98,99,100,101,102,112,122,123,137,138,140,144,145,146,147,154,169,170,172,188,193,199,202,206,216,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,133,-27,133,-38,-48,-92,-105,-57,-58,-59,-52,-73,133,-27,133,-27,-56,-40,-51,-52,-106,-50,133,-29,133,-39,-74,133,-28,-107,133,-53,-108,-54,-109,-55,]),'to':([50,51,53,54,55,56,57,58,59,98,99,100,101,102,112,140,144,145,147,154,183,188,193,205,206,219,244,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,-103,-39,-74,217,-107,-53,-108,-54,-109,-55,]),'close_brackets':([50,51,53,54,55,56,57,58,59,98,99,100,101,102,112,140,144,145,147,154,186,188,192,193,206,219,232,238,244,256,264,269,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,206,-39,209,-74,-107,-53,244,251,-108,-54,271,276,-109,-55,]),'step':([50,51,53,54,55,56,57,58,59,98,99,100,101,102,112,140,144,145,147,154,188,193,206,219,243,244,254,256,271,278,],[-38,-49,-46,-47,-48,-93,-94,-95,-92,-105,-57,-58,-59,-52,-73,-56,-40,-51,-106,-50,-39,-74,-107,-53,-117,-108,263,-54,-109,-55,]),'procedure':([65,],[106,]),'function':([65,],[107,]),'word':([66,235,249,],[109,109,109,]),'float':([66,235,249,],[110,110,110,]),'bool':([66,235,249,],[111,111,111,]),'ByVal':([67,161,],[114,114,]),'ByRef':([67,161,],[115,115,]),'then':([124,200,212,213,226,],[171,-110,-110,227,239,]),'until':([135,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'inside_logic':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[2,25,26,27,28,29,30,78,117,167,203,207,214,234,240,248,252,258,268,282,]),'variable':([0,3,4,5,6,7,8,39,69,119,181,190,201,208,221,227,236,237,239,247,260,277,],[3,3,3,3,3,3,3,3,3,3,3,3,3,223,3,3,3,223,3,3,3,3,]),'conditions':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'loops':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'calls':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'read_or_write':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assign':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'base_if':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'functions':([0,3,4,5,6,7,8,22,37,38,39,47,52,69,74,81,85,86,92,114,119,121,125,136,139,148,168,181,190,201,204,218,221,227,231,236,239,247,255,260,263,277,],[17,17,17,17,17,17,17,54,54,54,17,54,54,17,54,54,54,54,54,54,17,54,54,54,54,54,54,17,17,17,54,54,17,17,54,17,17,17,54,17,54,17,]),'print':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'read':([0,3,4,5,6,7,8,39,69,119,181,190,201,221,227,236,239,247,260,277,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ACTION_ADD_FUNCTION_CALL':([10,59,91,],[32,32,32,]),'ACTION_FILL_JUMP':([11,34,36,71,72,],[33,69,73,119,120,]),'else_ifs':([11,],[35,]),'ACTION_DO_WHILE_INDEX':([14,],[39,]),'ACTION_ADD_CLS_QUADRUPLET':([20,],[42,]),'ids_access':([21,22,23,37,38,45,47,52,74,81,85,86,92,104,105,114,121,125,136,139,148,168,204,218,231,255,263,],[43,55,63,55,55,83,90,55,90,55,55,90,55,63,156,55,55,55,55,55,90,55,55,55,55,55,55,]),'multiple_print':([22,47,85,],[46,87,141,]),'arithmetic_expression':([22,37,38,47,74,81,85,86,121,125,136,139,168,204,218,231,255,263,],[49,76,76,88,123,138,49,142,76,76,183,186,76,76,232,243,264,270,]),'value':([22,37,38,47,74,81,85,86,92,114,121,125,136,139,148,168,204,218,231,255,263,],[50,50,50,89,89,50,50,89,147,162,50,50,50,50,189,50,50,50,50,50,50,]),'possible_values':([22,37,38,47,52,74,81,85,86,92,114,121,125,136,139,148,168,204,218,231,255,263,],[51,51,51,51,98,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'real_value':([22,37,38,47,52,74,81,85,86,92,114,121,125,136,139,148,168,204,218,231,255,263,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'possible_read':([23,],[60,]),'multiple_read':([23,104,],[62,155,]),'subroutines':([24,233,265,274,279,284,],[64,245,272,280,283,286,]),'logic_expression':([37,38,74,81,121,125,168,204,],[75,77,122,137,169,172,199,216,]),'ACTION_ADD_FOR_VALUE':([40,],[79,]),'ACTION_ADD_SUBROUTINE_CALL':([41,],[80,]),'ACTION_ADD_VAR_VALUE':([44,59,91,],[82,102,146,]),'ACTION_CONSOLE_WRITE':([46,143,],[84,187,]),'arithmetic_operator':([49,76,88,123,138,142,183,186,232,243,264,270,],[92,92,92,92,92,92,92,92,92,92,92,92,]),'ACTION_ADD_WORD_VALUE':([56,],[99,]),'ACTION_ADD_FLOAT_VALUE':([57,],[100,]),'ACTION_ADD_BOOL_VALUE':([58,],[101,]),'ACTION_CONSOLE_READ':([60,],[103,]),'variable_type':([66,235,249,],[108,247,260,]),'arguments':([67,161,],[113,194,]),'logic_operator':([75,77,122,137,169,172,199,216,],[125,125,125,125,125,125,125,125,]),'ACTION_ADD_OPERATOR':([93,94,95,96,97,126,127,128,129,130,131,132,133,],[149,150,151,152,153,173,174,175,176,177,178,179,180,]),'ACTION_ADD_NOT_OPERAND':([98,],[154,]),'ACTION_ADD_PARAMETERS':([113,],[160,]),'ACTION_FILL_JUMP_END_IF':([116,118,197,211,],[164,166,210,225,]),'ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP':([134,],[181,]),'ACTION_ASSIGN_VALUE':([137,138,183,],[184,185,205,]),'ACTION_ADD_QUADRUPLET':([147,172,],[188,202,]),'ACTION_ADD_PROCEDURE':([157,],[190,]),'ACTION_ADD_FUNCTION':([158,],[191,]),'ACTION_ADD_FUNCTION_OPERAND':([162,163,],[195,196,]),'ACTION_ADD_QUADRUPLET_EMPTY_JUMP':([171,200,212,],[201,213,226,]),'ACTION_ADD_ONE_DIM_OPERAND':([206,],[219,]),'parameters':([208,237,],[222,250,]),'ACTION_NEW_IF':([214,],[228,]),'ACTION_WHILE_GOTO':([215,],[229,]),'ACTION_FOR_JUMP_BACK':([217,],[231,]),'ACTION_ADD_END_FUNCTION':([220,257,267,273,281,],[233,265,274,279,284,]),'ACTION_QUADRUPLET_EMPTY_JUMP_END_IF':([228,240,252,],[241,253,262,]),'ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE':([230,],[242,]),'ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP':([243,],[254,]),'ACTION_ADD_TWO_DIM_OPERAND':([244,],[256,]),'ACTION_FOR_INCREMENT':([270,],[277,]),'ACTION_ADD_THREE_DIM_OPERAND':([271,],[278,]),'ACTION_FOR_GOTO':([287,],[288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> inside_logic end','program',2,'p_program','Parser.py',117),
  ('program -> inside_logic end subroutines','program',3,'p_program','Parser.py',118),
  ('inside_logic -> variable inside_logic','inside_logic',2,'p_inside_logic','Parser.py',126),
  ('inside_logic -> conditions inside_logic','inside_logic',2,'p_inside_logic','Parser.py',127),
  ('inside_logic -> loops inside_logic','inside_logic',2,'p_inside_logic','Parser.py',128),
  ('inside_logic -> calls inside_logic','inside_logic',2,'p_inside_logic','Parser.py',129),
  ('inside_logic -> read_or_write inside_logic','inside_logic',2,'p_inside_logic','Parser.py',130),
  ('inside_logic -> assign inside_logic','inside_logic',2,'p_inside_logic','Parser.py',131),
  ('inside_logic -> <empty>','inside_logic',0,'p_inside_logic','Parser.py',132),
  ('variable -> dim id as variable_type','variable',4,'p_variable','Parser.py',137),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets','variable',7,'p_variable','Parser.py',138),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',10,'p_variable','Parser.py',139),
  ('variable -> dim id as variable_type open_brackets word_value close_brackets open_brackets word_value close_brackets open_brackets word_value close_brackets','variable',13,'p_variable','Parser.py',140),
  ('variable_type -> word','variable_type',1,'p_variable_type','Parser.py',164),
  ('variable_type -> float','variable_type',1,'p_variable_type','Parser.py',165),
  ('variable_type -> bool','variable_type',1,'p_variable_type','Parser.py',166),
  ('base_if -> if open_parenthesis logic_expression close_parenthesis then ACTION_ADD_QUADRUPLET_EMPTY_JUMP inside_logic ACTION_NEW_IF ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','base_if',9,'p_base_if','Parser.py',172),
  ('conditions -> base_if ACTION_FILL_JUMP end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',177),
  ('conditions -> base_if else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',7,'p_conditions','Parser.py',178),
  ('conditions -> base_if else_ifs end if ACTION_FILL_JUMP_END_IF','conditions',5,'p_conditions','Parser.py',179),
  ('conditions -> base_if else_ifs else ACTION_FILL_JUMP inside_logic end if ACTION_FILL_JUMP_END_IF','conditions',8,'p_conditions','Parser.py',180),
  ('else_ifs -> elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',9,'p_else_ifs','Parser.py',185),
  ('else_ifs -> else_ifs elsif ACTION_FILL_JUMP open_parenthesis logic_expression close_parenthesis ACTION_ADD_QUADRUPLET_EMPTY_JUMP then inside_logic ACTION_QUADRUPLET_EMPTY_JUMP_END_IF','else_ifs',10,'p_else_ifs','Parser.py',186),
  ('loops -> while open_parenthesis logic_expression close_parenthesis ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP inside_logic wend ACTION_WHILE_GOTO','loops',8,'p_loops','Parser.py',191),
  ('loops -> do ACTION_DO_WHILE_INDEX inside_logic loop until open_parenthesis logic_expression close_parenthesis ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE','loops',9,'p_loops','Parser.py',192),
  ('loops -> for id ACTION_ADD_FOR_VALUE equals arithmetic_expression ACTION_ASSIGN_VALUE to ACTION_FOR_JUMP_BACK arithmetic_expression ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP step arithmetic_expression ACTION_FOR_INCREMENT inside_logic next id ACTION_FOR_GOTO','loops',17,'p_loops','Parser.py',193),
  ('logic_expression -> arithmetic_expression','logic_expression',1,'p_logic_expression','Parser.py',198),
  ('logic_expression -> logic_expression logic_operator logic_expression ACTION_ADD_QUADRUPLET','logic_expression',4,'p_logic_expression','Parser.py',199),
  ('logic_expression -> open_parenthesis logic_expression close_parenthesis','logic_expression',3,'p_logic_expression','Parser.py',200),
  ('logic_operator -> and ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',205),
  ('logic_operator -> or ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',206),
  ('logic_operator -> is_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',207),
  ('logic_operator -> is_not_equal ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',208),
  ('logic_operator -> greater_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',209),
  ('logic_operator -> greater_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',210),
  ('logic_operator -> less_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',211),
  ('logic_operator -> less_or_equal_than ACTION_ADD_OPERATOR','logic_operator',2,'p_logic_operator','Parser.py',212),
  ('arithmetic_expression -> value','arithmetic_expression',1,'p_arithmetic_expression','Parser.py',217),
  ('arithmetic_expression -> arithmetic_expression arithmetic_operator value ACTION_ADD_QUADRUPLET','arithmetic_expression',4,'p_arithmetic_expression','Parser.py',218),
  ('arithmetic_expression -> open_parenthesis arithmetic_expression close_parenthesis','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',219),
  ('arithmetic_operator -> sum ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',224),
  ('arithmetic_operator -> substraction ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',225),
  ('arithmetic_operator -> multiplication ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',226),
  ('arithmetic_operator -> division ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',227),
  ('arithmetic_operator -> exponent ACTION_ADD_OPERATOR','arithmetic_operator',2,'p_arithmetic_operator','Parser.py',228),
  ('possible_values -> real_value','possible_values',1,'p_possible_values','Parser.py',233),
  ('possible_values -> functions','possible_values',1,'p_possible_values','Parser.py',234),
  ('possible_values -> ids_access','possible_values',1,'p_possible_values','Parser.py',235),
  ('value -> possible_values','value',1,'p_value','Parser.py',240),
  ('value -> not possible_values ACTION_ADD_NOT_OPERAND','value',3,'p_value','Parser.py',241),
  ('value -> open_parenthesis value close_parenthesis','value',3,'p_value','Parser.py',242),
  ('ids_access -> id ACTION_ADD_VAR_VALUE','ids_access',2,'p_ids_access','Parser.py',247),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets ACTION_ADD_ONE_DIM_OPERAND','ids_access',6,'p_ids_access','Parser.py',248),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_TWO_DIM_OPERAND','ids_access',9,'p_ids_access','Parser.py',249),
  ('ids_access -> id ACTION_ADD_VAR_VALUE open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets open_brackets arithmetic_expression close_brackets ACTION_ADD_THREE_DIM_OPERAND','ids_access',12,'p_ids_access','Parser.py',250),
  ('ids_access -> open_parenthesis ids_access close_parenthesis','ids_access',3,'p_ids_access','Parser.py',251),
  ('real_value -> word_value ACTION_ADD_WORD_VALUE','real_value',2,'p_real_value','Parser.py',256),
  ('real_value -> float_value ACTION_ADD_FLOAT_VALUE','real_value',2,'p_real_value','Parser.py',257),
  ('real_value -> bool_value ACTION_ADD_BOOL_VALUE','real_value',2,'p_real_value','Parser.py',258),
  ('real_value -> id ACTION_ADD_VAR_VALUE','real_value',2,'p_real_value','Parser.py',259),
  ('calls -> gosub id ACTION_ADD_SUBROUTINE_CALL','calls',3,'p_calls','Parser.py',264),
  ('calls -> functions','calls',1,'p_calls','Parser.py',265),
  ('subroutines -> sub procedure id ACTION_ADD_PROCEDURE inside_logic return ACTION_ADD_END_FUNCTION subroutines','subroutines',8,'p_subroutines','Parser.py',270),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',11,'p_subroutines','Parser.py',271),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',12,'p_subroutines','Parser.py',272),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',13,'p_subroutines','Parser.py',273),
  ('subroutines -> sub function id ACTION_ADD_FUNCTION open_parenthesis parameters close_parenthesis as variable_type inside_logic end sub ACTION_ADD_END_FUNCTION subroutines','subroutines',14,'p_subroutines','Parser.py',274),
  ('subroutines -> <empty>','subroutines',0,'p_subroutines','Parser.py',275),
  ('assign -> let ids_access equals logic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',289),
  ('assign -> let ids_access equals arithmetic_expression ACTION_ASSIGN_VALUE','assign',5,'p_assign','Parser.py',290),
  ('parameters -> variable','parameters',1,'p_parameters','Parser.py',295),
  ('parameters -> parameters comma parameters','parameters',3,'p_parameters','Parser.py',296),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis close_parenthesis','functions',4,'p_functions','Parser.py',301),
  ('functions -> id ACTION_ADD_FUNCTION_CALL open_parenthesis arguments ACTION_ADD_PARAMETERS close_parenthesis','functions',6,'p_functions','Parser.py',302),
  ('arguments -> ByVal value ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',307),
  ('arguments -> ByRef id ACTION_ADD_FUNCTION_OPERAND','arguments',3,'p_arguments','Parser.py',308),
  ('arguments -> arguments comma arguments','arguments',3,'p_arguments','Parser.py',309),
  ('read_or_write -> print','read_or_write',1,'p_read_or_write','Parser.py',314),
  ('read_or_write -> read','read_or_write',1,'p_read_or_write','Parser.py',315),
  ('read_or_write -> dunkelCls ACTION_ADD_CLS_QUADRUPLET','read_or_write',2,'p_read_or_write','Parser.py',316),
  ('print -> dunkelPrint multiple_print ACTION_CONSOLE_WRITE','print',3,'p_print','Parser.py',321),
  ('print -> dunkelPrint open_parenthesis multiple_print close_parenthesis ACTION_CONSOLE_WRITE','print',5,'p_print','Parser.py',322),
  ('multiple_print -> string','multiple_print',1,'p_multiple_print','Parser.py',327),
  ('multiple_print -> arithmetic_expression','multiple_print',1,'p_multiple_print','Parser.py',328),
  ('multiple_print -> multiple_print comma multiple_print','multiple_print',3,'p_multiple_print','Parser.py',329),
  ('read -> dunkelRead possible_read ACTION_CONSOLE_READ','read',3,'p_read','Parser.py',339),
  ('possible_read -> string comma multiple_read','possible_read',3,'p_possible_read','Parser.py',344),
  ('possible_read -> multiple_read','possible_read',1,'p_possible_read','Parser.py',345),
  ('multiple_read -> ids_access','multiple_read',1,'p_multiple_read','Parser.py',352),
  ('multiple_read -> multiple_read comma ids_access','multiple_read',3,'p_multiple_read','Parser.py',353),
  ('ACTION_ADD_FOR_VALUE -> <empty>','ACTION_ADD_FOR_VALUE',0,'p_action_add_for_value','Parser.py',360),
  ('ACTION_ADD_VAR_VALUE -> <empty>','ACTION_ADD_VAR_VALUE',0,'p_action_add_var_value','Parser.py',373),
  ('ACTION_ADD_WORD_VALUE -> <empty>','ACTION_ADD_WORD_VALUE',0,'p_action_add_word_value','Parser.py',381),
  ('ACTION_ADD_FLOAT_VALUE -> <empty>','ACTION_ADD_FLOAT_VALUE',0,'p_action_add_float_value','Parser.py',387),
  ('ACTION_ADD_BOOL_VALUE -> <empty>','ACTION_ADD_BOOL_VALUE',0,'p_action_add_bool_value','Parser.py',393),
  ('ACTION_ADD_OPERATOR -> <empty>','ACTION_ADD_OPERATOR',0,'p_action_add_operator','Parser.py',399),
  ('ACTION_ADD_FUNCTION_OPERAND -> <empty>','ACTION_ADD_FUNCTION_OPERAND',0,'p_action_add_function_operand','Parser.py',405),
  ('ACTION_ADD_FUNCTION_CALL -> <empty>','ACTION_ADD_FUNCTION_CALL',0,'p_action_add_function_call','Parser.py',413),
  ('ACTION_ADD_SUBROUTINE_CALL -> <empty>','ACTION_ADD_SUBROUTINE_CALL',0,'p_action_add_subroutine_call','Parser.py',422),
  ('ACTION_ADD_FUNCTION -> <empty>','ACTION_ADD_FUNCTION',0,'p_action_add_function','Parser.py',431),
  ('ACTION_ADD_PROCEDURE -> <empty>','ACTION_ADD_PROCEDURE',0,'p_action_add_procedure','Parser.py',440),
  ('ACTION_ADD_END_FUNCTION -> <empty>','ACTION_ADD_END_FUNCTION',0,'p_action_add_end_function','Parser.py',449),
  ('ACTION_ASSIGN_VALUE -> <empty>','ACTION_ASSIGN_VALUE',0,'p_action_assign_value','Parser.py',457),
  ('ACTION_ADD_PARAMETERS -> <empty>','ACTION_ADD_PARAMETERS',0,'p_action_add_parameters','Parser.py',468),
  ('ACTION_ADD_NOT_OPERAND -> <empty>','ACTION_ADD_NOT_OPERAND',0,'p_action_add_not_operand','Parser.py',481),
  ('ACTION_ADD_QUADRUPLET -> <empty>','ACTION_ADD_QUADRUPLET',0,'p_action_add_quadruplet','Parser.py',497),
  ('ACTION_ADD_ONE_DIM_OPERAND -> <empty>','ACTION_ADD_ONE_DIM_OPERAND',0,'p_action_add_one_dim_operand','Parser.py',517),
  ('ACTION_ADD_TWO_DIM_OPERAND -> <empty>','ACTION_ADD_TWO_DIM_OPERAND',0,'p_action_add_two_dim_operand','Parser.py',527),
  ('ACTION_ADD_THREE_DIM_OPERAND -> <empty>','ACTION_ADD_THREE_DIM_OPERAND',0,'p_action_add_three_dim_operand','Parser.py',538),
  ('ACTION_ADD_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_quadruplet_empty_jump','Parser.py',550),
  ('ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_WHILE_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_while_quadruplet_empty_jump','Parser.py',564),
  ('ACTION_NEW_IF -> <empty>','ACTION_NEW_IF',0,'p_action_new_if','Parser.py',585),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_END_IF -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_END_IF',0,'p_action_quadruplet_empty_jump_end_if','Parser.py',592),
  ('ACTION_FILL_JUMP -> <empty>','ACTION_FILL_JUMP',0,'p_action_fill_jump','Parser.py',602),
  ('ACTION_FILL_JUMP_END_IF -> <empty>','ACTION_FILL_JUMP_END_IF',0,'p_action_fill_jump_end_if','Parser.py',611),
  ('ACTION_FOR_JUMP_BACK -> <empty>','ACTION_FOR_JUMP_BACK',0,'p_action_for_jump_back','Parser.py',622),
  ('ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP -> <empty>','ACTION_ADD_FOR_QUADRUPLET_EMPTY_JUMP',0,'p_action_add_for_quadruplet_empty_jump','Parser.py',629),
  ('ACTION_FOR_INCREMENT -> <empty>','ACTION_FOR_INCREMENT',0,'p_action_for_increment','Parser.py',650),
  ('ACTION_FOR_GOTO -> <empty>','ACTION_FOR_GOTO',0,'p_action_for_goto','Parser.py',659),
  ('ACTION_WHILE_GOTO -> <empty>','ACTION_WHILE_GOTO',0,'p_action_while_goto','Parser.py',670),
  ('ACTION_DO_WHILE_INDEX -> <empty>','ACTION_DO_WHILE_INDEX',0,'p_action_do_while_jump_index','Parser.py',682),
  ('ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE -> <empty>','ACTION_QUADRUPLET_EMPTY_JUMP_DO_WHILE',0,'p_action_quadruplet_empty_jump_do_while','Parser.py',688),
  ('ACTION_CONSOLE_WRITE -> <empty>','ACTION_CONSOLE_WRITE',0,'p_action_console_write','Parser.py',698),
  ('ACTION_CONSOLE_READ -> <empty>','ACTION_CONSOLE_READ',0,'p_action_console_read','Parser.py',704),
  ('ACTION_ADD_CLS_QUADRUPLET -> <empty>','ACTION_ADD_CLS_QUADRUPLET',0,'p_action_add_cls_quadruplet','Parser.py',710),
]
